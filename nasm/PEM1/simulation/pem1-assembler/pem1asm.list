     1                                  ;Name:          pem1asm.asm
     2                                  ;Build:         see makefile
     3                                  ;Run:           ./pem1asm sourcefile -o binaryfile
     4                                  ;description:   Simple assembler for PEM1
     5                                  ;               -o creates binary file for PEM1 program.  This program cannot be run from any commandline!
     6                                  
     7                                  BITS 64
     8                                  
   845                                  [list -]
   846                                  
   847                                  section .bss
   848                                      %include "sectionbss.asm"
   849                              <1> section .bss
   850 00000000 <res 00000008>      <1>     fdsource:           resq    1
   851 00000008 <res 00000008>      <1>     fddestination:      resq    1
   852 00000010 <res 00000008>      <1>     ptrSourceFile:      resq    1
   853 00000018 <res 00000008>      <1>     ptrDestinationFile: resq    1
   854 00000020 <res 00000001>      <1>     buffer:             resb    1
   855                              <1>     ; flags
   856 00000021 <res 00000008>      <1>     sourcelines:        resq    1
   857 00000029 <res 00000001>      <1>     ignoreLine:         resb    1
   858 0000002A <res 00000001>      <1>     firstCharInLine:    resb    1
   859 0000002B <res 00000008>      <1>     charInLine:         resq    1
   860 00000033 <res 00000027>      <1>     decbuffer:          resb    39
   861                              <1>     .length:            equ     $-decbuffer
   862                                      
   863                                  section .data
   864                                      %include "errorlist.asm"
   865                              <1> ; custom errors must begin with number -134
   866                              <1> %define ESHOWUSAGE      -134
   867                              <1> %define EILEGALOPTION   -135
   868                              <1> %define EFILEEXISTS     -136
   869                              <1> %define ENOTUSING       -137
   870                              <1> %define EILEGALCHAR     -138
   871                              <1> 
   872                              <1> ; the errors messages list
   873                              <1> errorList:
   874 00000000 [5004000000000000]- <1>     dq      EPERMerr,ENOENTerr,ESRCHerr,EINTRerr,EIOerr,ENXIOerr,E2BIGerr
   875 00000008 [6904000000000000]- <1>
   876 00000010 [8404000000000000]- <1>
   877 00000018 [9504000000000000]- <1>
   878 00000020 [AE04000000000000]- <1>
   879 00000028 [B904000000000000]- <1>
   880 00000030 [D404000000000000]  <1>
   881 00000038 [EC04000000000000]- <1>     dq      ENOEXECerr,EBADFerr,ECHILDerr,EAGAINerr,ENOMEMerr,EACCESerr
   882 00000040 [FF04000000000000]- <1>
   883 00000048 [1005000000000000]- <1>
   884 00000050 [2405000000000000]- <1>
   885 00000058 [2F05000000000000]- <1>
   886 00000060 [3E05000000000000]  <1>
   887 00000068 [5105000000000000]- <1>     dq      EFAULTerr,ENOTBLKerr,EBUSYerr,EEXISTerr,EXDEVerr,ENODEVerr
   888 00000070 [5E05000000000000]- <1>
   889 00000078 [7505000000000000]- <1>
   890 00000080 [8E05000000000000]- <1>
   891 00000088 [9B05000000000000]- <1>
   892 00000090 [AE05000000000000]  <1>
   893 00000098 [BE05000000000000]- <1>     dq      ENOTDIRerr,EISDIRerr,EINVALerr,ENFILEerr,EMFILEerr,ENOTTYerr
   894 000000A0 [CF05000000000000]- <1>
   895 000000A8 [DF05000000000000]- <1>
   896 000000B0 [F105000000000000]- <1>
   897 000000B8 [0606000000000000]- <1>
   898 000000C0 [1B06000000000000]  <1>
   899 000000C8 [2D06000000000000]- <1>     dq      ETXTBSYerr,EFBIGerr,ENOSPCerr,ESPIPEerr,EROFSerr,EMLINKerr
   900 000000D0 [3D06000000000000]- <1>
   901 000000D8 [4D06000000000000]- <1>
   902 000000E0 [6606000000000000]- <1>
   903 000000E8 [7406000000000000]- <1>
   904 000000F0 [8B06000000000000]  <1>
   905 000000F8 [9B06000000000000]- <1>     dq      EPIPEerr,EDOMerr,ERANGEerr,EDEADLKerr,ENAMETOOLONGerr,ENOLCKerr
   906 00000100 [A806000000000000]- <1>
   907 00000108 [CD06000000000000]- <1>
   908 00000110 [EC06000000000000]- <1>
   909 00000118 [0B07000000000000]- <1>
   910 00000120 [1F07000000000000]  <1>
   911 00000128 [3A07000000000000]- <1>     dq      ENOSYSerr,ENOTEMPTYerr,ELOOPerr,EWOULDBLOCKerr,ENOMSGerr
   912 00000130 [5407000000000000]- <1>
   913 00000138 [6907000000000000]- <1>
   914 00000140 [8E07000000000000]- <1>
   915 00000148 [A507000000000000]  <1>
   916 00000150 [C107000000000000]- <1>     dq      EIDRMerr,ECHRNGerr,EL2NSYNCerr,EL3HLTerr,EL3RSTerr,ELNRNGerr
   917 00000158 [D507000000000000]- <1>
   918 00000160 [F207000000000000]- <1>
   919 00000168 [0C08000000000000]- <1>
   920 00000170 [1C08000000000000]- <1>
   921 00000178 [2B08000000000000]  <1>
   922 00000180 [4508000000000000]- <1>     dq      EUNATCHerr,ENOCSIerr,EL2HLTerr,EBADEerr,EBADRerr,EXFULLerr
   923 00000188 [6308000000000000]- <1>
   924 00000190 [7F08000000000000]- <1>
   925 00000198 [8F08000000000000]- <1>
   926 000001A0 [A108000000000000]- <1>
   927 000001A8 [BD08000000000000]  <1>
   928 000001B0 [CC08000000000000]- <1>     dq      ENOANOerr,EBADRQCerr,EBADSLTerr,EDEADLOCKerr,EBFONTerr,ENOSTRerr
   929 000001B8 [D608000000000000]- <1>
   930 000001C0 [EC08000000000000]- <1>
   931 000001C8 [FA08000000000000]- <1>
   932 000001D0 [1909000000000000]- <1>
   933 000001D8 [2F09000000000000]  <1>
   934 000001E0 [4409000000000000]- <1>     dq      ENODATAerr,ETIMEerr,ENOSRerr,ENONETerr,ENOPKGerr,EREMOTEerr
   935 000001E8 [5709000000000000]- <1>
   936 000001F0 [6609000000000000]- <1>
   937 000001F8 [8009000000000000]- <1>
   938 00000200 [9F09000000000000]- <1>
   939 00000208 [B609000000000000]  <1>
   940 00000210 [C809000000000000]- <1>     dq      ENOLINKerr,EADVerr,ESRMNTerr,ECOMMerr,EPROTOerr,EMULTIHOPerr
   941 00000218 [DF09000000000000]- <1>
   942 00000220 [F009000000000000]- <1>
   943 00000228 [FF09000000000000]- <1>
   944 00000230 [1C0A000000000000]- <1>
   945 00000238 [2C0A000000000000]  <1>
   946 00000240 [400A000000000000]- <1>     dq      EDOTDOTerr,EBADMSGerr,EOVERFLOWerr,ENOTUNIQerr,EBADFDerr,EREMCHGerr
   947 00000248 [540A000000000000]- <1>
   948 00000250 [680A000000000000]- <1>
   949 00000258 [8F0A000000000000]- <1>
   950 00000260 [AB0A000000000000]- <1>
   951 00000268 [C90A000000000000]  <1>
   952 00000270 [E10A000000000000]- <1>     dq      ELIBACCerr,ELIBBADerr,ELIBSCNerr,ELIBMAXerr,ELIBEXECerr,EILSEQerr
   953 00000278 [090B000000000000]- <1>
   954 00000280 [2F0B000000000000]- <1>
   955 00000288 [500B000000000000]- <1>
   956 00000290 [810B000000000000]- <1>
   957 00000298 [A80B000000000000]  <1>
   958 000002A0 [BF0B000000000000]- <1>     dq      ERESTARTerr,ESTRPIPEerr,EUSERSerr,ENOTSOCKerr,EDESTADDRREQerr
   959 000002A8 [EC0B000000000000]- <1>
   960 000002B0 [000C000000000000]- <1>
   961 000002B8 [100C000000000000]- <1>
   962 000002C0 [300C000000000000]  <1>
   963 000002C8 [4E0C000000000000]- <1>     dq      EMSGSIZEerr,EPROTOTYPEerr,ENOPROTOOPTerr,EPROTONOSUPPORTerr
   964 000002D0 [600C000000000000]- <1>
   965 000002D8 [800C000000000000]- <1>
   966 000002E0 [980C000000000000]  <1>
   967 000002E8 [B00C000000000000]- <1>     dq      ESOCKTNOSUPPORTerr,EOPNOTSUPPerr,EPFNOSUPPORTerr,EAFNOSUPPORTerr
   968 000002F0 [CB0C000000000000]- <1>
   969 000002F8 [FA0C000000000000]- <1>
   970 00000300 [190D000000000000]  <1>
   971 00000308 [430D000000000000]- <1>     dq      EADDRINUSEerr,EADDRNOTAVAILerr,ENETDOWNerr,ENETUNREACHerr,ENETRESETerr
   972 00000310 [5B0D000000000000]- <1>
   973 00000318 [7C0D000000000000]- <1>
   974 00000320 [8D0D000000000000]- <1>
   975 00000328 [A50D000000000000]  <1>
   976 00000330 [D20D000000000000]- <1>     dq      ECONNABORTEDerr,ECONNRESETerr,ENOBUFSerr,EISCONNerr,ENOTCONNerr
   977 00000338 [F40D000000000000]- <1>
   978 00000340 [0E0E000000000000]- <1>
   979 00000348 [290E000000000000]- <1>
   980 00000350 [520E000000000000]  <1>
   981 00000358 [770E000000000000]- <1>     dq      ESHUTDOWNerr,ETOOMANYREFSerr,ETIMEDOUTerr,ECONNREFUSEDerr,EHOSTDOWNerr,
   982 00000360 [A60E000000000000]- <1>
   983 00000368 [CA0E000000000000]- <1>
   984 00000370 [E00E000000000000]- <1>
   985 00000378 [F40E000000000000]  <1>
   986 00000380 [020F000000000000]- <1>     dq      EHOSTUNREACHerr,EALREADYerr,EINPROGRESSerr,ESTALEerr,EUCLEANerr,
   987 00000388 [140F000000000000]- <1>
   988 00000390 [330F000000000000]- <1>
   989 00000398 [4E0F000000000000]- <1>
   990 000003A0 [650F000000000000]  <1>
   991 000003A8 [7F0F000000000000]- <1>     dq      ENOTNAMerr,ENAVAILerr,EISNAMerr,EREMOTEIOerr,EDQUOTerr,ENOMEDIUMerr
   992 000003B0 [9C0F000000000000]- <1>
   993 000003B8 [BB0F000000000000]- <1>
   994 000003C0 [D10F000000000000]- <1>
   995 000003C8 [E30F000000000000]- <1>
   996 000003D0 [F30F000000000000]  <1>
   997 000003D8 [0410000000000000]- <1>     dq      EMEDIUMTYPEerr,ECANCELEDerr,ENOKEYerr,EKEYEXPIREDerr,EKEYREVOKEDerr
   998 000003E0 [1710000000000000]- <1>
   999 000003E8 [2B10000000000000]- <1>
  1000 000003F0 [4710000000000000]- <1>
  1001 000003F8 [5810000000000000]  <1>
  1002 00000400 [6E10000000000000]- <1>     dq      EKEYREJECTEDerr,EOWNERDEADerr,ENOTRECOVERABLEerr,ERFKILLerr,EHWPOISONerr
  1003 00000408 [8B10000000000000]- <1>
  1004 00000410 [9710000000000000]- <1>
  1005 00000418 [AE10000000000000]- <1>
  1006 00000420 [D510000000000000]  <1>
  1007                              <1>     
  1008                              <1>     ; custom errors must begin with number -134
  1009 00000428 [F510000000000000]- <1>     dq      ESHOWUSAGEerr,EILEGALOPTIONerr,EFILEEXISTSerr,ENOTUSINGerr,EILEGALCHARerr
  1010 00000430 [1E11000000000000]- <1>
  1011 00000438 [4B11000000000000]- <1>
  1012 00000440 [6A11000000000000]- <1>
  1013 00000448 [A211000000000000]  <1>
  1014                              <1> 
  1015 00000450 4F7065726174696F6E- <1>     EPERMerr:               db      EPERMmsg,10,0
  1016 00000459 206E6F74207065726D- <1>
  1017 00000462 69747465640A00      <1>
  1018 00000469 4E6F20737563682066- <1>     ENOENTerr:              db      ENOENTmsg,10,0
  1019 00000472 696C65206F72206469- <1>
  1020 0000047B 726563746F72790A00  <1>
  1021 00000484 4E6F20737563682070- <1>     ESRCHerr:               db      ESRCHmsg,10,0
  1022 0000048D 726F636573730A00    <1>
  1023 00000495 496E74657272757074- <1>     EINTRerr:               db      EINTRmsg,10,0
  1024 0000049E 65642073797374656D- <1>
  1025 000004A7 2063616C6C0A00      <1>
  1026 000004AE 492F4F206572726F72- <1>     EIOerr:                 db      EIOmsg,10,0
  1027 000004B7 0A00                <1>
  1028 000004B9 4E6F20737563682064- <1>     ENXIOerr:               db      ENXIOmsg,10,0
  1029 000004C2 6576696365206F7220- <1>
  1030 000004CB 616464726573730A00  <1>
  1031 000004D4 417267756D656E7420- <1>     E2BIGerr:               db      E2BIGmsg,10,0
  1032 000004DD 6C69737420746F6F20- <1>
  1033 000004E6 6C6F6E670A00        <1>
  1034 000004EC 4578656320666F726D- <1>     ENOEXECerr:             db      ENOEXECmsg,10,0
  1035 000004F5 6174206572726F720A- <1>
  1036 000004FE 00                  <1>
  1037 000004FF 4261642066696C6520- <1>     EBADFerr:               db      EBADFmsg,10,0
  1038 00000508 6E756D6265720A00    <1>
  1039 00000510 4E6F206368696C6420- <1>     ECHILDerr:              db      ECHILDmsg,10,0
  1040 00000519 70726F636573736573- <1>
  1041 00000522 0A00                <1>
  1042 00000524 54727920616761696E- <1>     EAGAINerr:              db      EAGAINmsg,10,0
  1043 0000052D 0A00                <1>
  1044 0000052F 4F7574206F66206D65- <1>     ENOMEMerr:              db      ENOMEMmsg,10,0
  1045 00000538 6D6F72790A00        <1>
  1046 0000053E 5065726D697373696F- <1>     EACCESerr:              db      EACCESmsg,10,0
  1047 00000547 6E2064656E6965640A- <1>
  1048 00000550 00                  <1>
  1049 00000551 426164206164647265- <1>     EFAULTerr:              db      EFAULTmsg,10,0
  1050 0000055A 73730A00            <1>
  1051 0000055E 426C6F636B20646576- <1>     ENOTBLKerr:             db      ENOTBLKmsg,10,0
  1052 00000567 696365207265717569- <1>
  1053 00000570 7265640A00          <1>
  1054 00000575 446576696365206F72- <1>     EBUSYerr:               db      EBUSYmsg,10,0
  1055 0000057E 207265736F75726365- <1>
  1056 00000587 20627573790A00      <1>
  1057 0000058E 46696C652065786973- <1>     EEXISTerr:              db      EEXISTmsg,10,0
  1058 00000597 74730A00            <1>
  1059 0000059B 43726F73732D646576- <1>     EXDEVerr:               db      EXDEVmsg,10,0
  1060 000005A4 696365206C696E6B0A- <1>
  1061 000005AD 00                  <1>
  1062 000005AE 4E6F20737563682064- <1>     ENODEVerr:              db      ENODEVmsg,10,0
  1063 000005B7 65766963650A00      <1>
  1064 000005BE 4E6F74206120646972- <1>     ENOTDIRerr:             db      ENOTDIRmsg,10,0
  1065 000005C7 6563746F72790A00    <1>
  1066 000005CF 497320612064697265- <1>     EISDIRerr:              db      EISDIRmsg,10,0
  1067 000005D8 63746F72790A00      <1>
  1068 000005DF 496E76616C69642061- <1>     EINVALerr:              db      EINVALmsg,10,0
  1069 000005E8 7267756D656E740A00  <1>
  1070 000005F1 46696C65207461626C- <1>     ENFILEerr:              db      ENFILEmsg,10,0
  1071 000005FA 65206F766572666C6F- <1>
  1072 00000603 770A00              <1>
  1073 00000606 546F6F206D616E7920- <1>     EMFILEerr:              db      EMFILEmsg,10,0
  1074 0000060F 6F70656E2066696C65- <1>
  1075 00000618 730A00              <1>
  1076 0000061B 4E6F74206120747970- <1>     ENOTTYerr:              db      ENOTTYmsg,10,0
  1077 00000624 657772697465720A00  <1>
  1078 0000062D 546578742066696C65- <1>     ETXTBSYerr:             db      ETXTBSYmsg,10,0
  1079 00000636 20627573790A00      <1>
  1080 0000063D 46696C6520746F6F20- <1>     EFBIGerr:               db      EFBIGmsg,10,0
  1081 00000646 6C617267650A00      <1>
  1082 0000064D 4E6F20737061636520- <1>     ENOSPCerr:              db      ENOSPCmsg,10,0
  1083 00000656 6C656674206F6E2064- <1>
  1084 0000065F 65766963650A00      <1>
  1085 00000666 496C6C6567616C2073- <1>     ESPIPEerr:              db      ESPIPEmsg,10,0
  1086 0000066F 65656B0A00          <1>
  1087 00000674 526561642D6F6E6C79- <1>     EROFSerr:               db      EROFSmsg,10,0
  1088 0000067D 2066696C6520737973- <1>
  1089 00000686 74656D0A00          <1>
  1090 0000068B 546F6F206D616E7920- <1>     EMLINKerr:              db      EMLINKmsg,10,0
  1091 00000694 6C696E6B730A00      <1>
  1092 0000069B 42726F6B656E207069- <1>     EPIPEerr:               db      EPIPEmsg,10,0
  1093 000006A4 70650A00            <1>
  1094 000006A8 4D6174682061726775- <1>     EDOMerr:                db      EDOMmsg,10,0
  1095 000006B1 6D656E74206F757420- <1>
  1096 000006BA 6F6620646F6D61696E- <1>
  1097 000006C3 206F662066756E630A- <1>
  1098 000006CC 00                  <1>
  1099 000006CD 4D6174682072657375- <1>     ERANGEerr:              db      ERANGEmsg,10,0
  1100 000006D6 6C74206E6F74207265- <1>
  1101 000006DF 70726573656E746162- <1>
  1102 000006E8 6C650A00            <1>
  1103 000006EC 5265736F7572636520- <1>     EDEADLKerr:             db      EDEADLKmsg,10,0
  1104 000006F5 646561646C6F636B20- <1>
  1105 000006FE 776F756C64206F6363- <1>
  1106 00000707 75720A00            <1>
  1107 0000070B 46696C65206E616D65- <1>     ENAMETOOLONGerr:        db      ENAMETOOLONGmsg,10,0
  1108 00000714 20746F6F206C6F6E67- <1>
  1109 0000071D 0A00                <1>
  1110 0000071F 4E6F207265636F7264- <1>     ENOLCKerr:              db      ENOLCKmsg,10,0
  1111 00000728 206C6F636B73206176- <1>
  1112 00000731 61696C61626C650A00  <1>
  1113 0000073A 46756E6374696F6E20- <1>     ENOSYSerr:              db      ENOSYSmsg,10,0
  1114 00000743 6E6F7420696D706C65- <1>
  1115 0000074C 6D656E7465640A00    <1>
  1116 00000754 4469726563746F7279- <1>     ENOTEMPTYerr:           db      ENOTEMPTYmsg,10,0
  1117 0000075D 206E6F7420656D7074- <1>
  1118 00000766 790A00              <1>
  1119 00000769 546F6F206D616E7920- <1>     ELOOPerr:               db      ELOOPmsg,10,0
  1120 00000772 73796D626F6C696320- <1>
  1121 0000077B 6C696E6B7320656E63- <1>
  1122 00000784 6F756E74657265640A- <1>
  1123 0000078D 00                  <1>
  1124 0000078E 4F7065726174696F6E- <1>     EWOULDBLOCKerr:         db      EWOULDBLOCKmsg,10,0
  1125 00000797 20776F756C6420626C- <1>
  1126 000007A0 6F636B0A00          <1>
  1127 000007A5 4E6F206D6573736167- <1>     ENOMSGerr:              db      ENOMSGmsg,10,0
  1128 000007AE 65206F662064657369- <1>
  1129 000007B7 72656420747970650A- <1>
  1130 000007C0 00                  <1>
  1131 000007C1 4964656E7469666965- <1>     EIDRMerr:               db      EIDRMmsg,10,0
  1132 000007CA 722072656D6F766564- <1>
  1133 000007D3 0A00                <1>
  1134 000007D5 4368616E6E656C206E- <1>     ECHRNGerr:              db      ECHRNGmsg,10,0
  1135 000007DE 756D626572206F7574- <1>
  1136 000007E7 206F662072616E6765- <1>
  1137 000007F0 0A00                <1>
  1138 000007F2 4C6576656C2032206E- <1>     EL2NSYNCerr:            db      EL2NSYNCmsg,10,0
  1139 000007FB 6F742073796E636872- <1>
  1140 00000804 6F6E697A65640A00    <1>
  1141 0000080C 4C6576656C20332068- <1>     EL3HLTerr:              db      EL3HLTmsg,10,0
  1142 00000815 616C7465640A00      <1>
  1143 0000081C 4C6576656C20332072- <1>     EL3RSTerr:              db      EL3RSTmsg,10,0
  1144 00000825 657365740A00        <1>
  1145 0000082B 4C696E6B206E756D62- <1>     ELNRNGerr:              db      ELNRNGmsg,10,0
  1146 00000834 6572206F7574206F66- <1>
  1147 0000083D 2072616E67650A00    <1>
  1148 00000845 50726F746F636F6C20- <1>     EUNATCHerr:             db      EUNATCHmsg,10,0
  1149 0000084E 647269766572206E6F- <1>
  1150 00000857 742061747461636865- <1>
  1151 00000860 640A00              <1>
  1152 00000863 4E6F20435349207374- <1>     ENOCSIerr:              db      ENOCSImsg,10,0
  1153 0000086C 727563747572652061- <1>
  1154 00000875 7661696C61626C650A- <1>
  1155 0000087E 00                  <1>
  1156 0000087F 4C6576656C20322068- <1>     EL2HLTerr:              db      EL2HLTmsg,10,0
  1157 00000888 616C7465640A00      <1>
  1158 0000088F 496E76616C69642065- <1>     EBADEerr:               db      EBADEmsg,10,0
  1159 00000898 786368616E67650A00  <1>
  1160 000008A1 496E76616C69642072- <1>     EBADRerr:               db      EBADRmsg,10,0
  1161 000008AA 657175657374206465- <1>
  1162 000008B3 7363726970746F720A- <1>
  1163 000008BC 00                  <1>
  1164 000008BD 45786368616E676520- <1>     EXFULLerr:              db      EXFULLmsg,10,0
  1165 000008C6 66756C6C0A00        <1>
  1166 000008CC 4E6F20616E6F64650A- <1>     ENOANOerr:              db      ENOANOmsg,10,0
  1167 000008D5 00                  <1>
  1168 000008D6 496E76616C69642072- <1>     EBADRQCerr:             db      EBADRQCmsg,10,0
  1169 000008DF 65717565737420636F- <1>
  1170 000008E8 64650A00            <1>
  1171 000008EC 496E76616C69642073- <1>     EBADSLTerr:             db      EBADSLTmsg,10,0
  1172 000008F5 6C6F740A00          <1>
  1173 000008FA 5265736F7572636520- <1>     EDEADLOCKerr:           db      EDEADLOCKmsg,10,0
  1174 00000903 646561646C6F636B20- <1>
  1175 0000090C 776F756C64206F6363- <1>
  1176 00000915 75720A00            <1>
  1177 00000919 42616420666F6E7420- <1>     EBFONTerr:              db      EBFONTmsg,10,0
  1178 00000922 66696C6520666F726D- <1>
  1179 0000092B 61740A00            <1>
  1180 0000092F 446576696365206E6F- <1>     ENOSTRerr:              db      ENOSTRmsg,10,0
  1181 00000938 742061207374726561- <1>
  1182 00000941 6D0A00              <1>
  1183 00000944 4E6F20646174612061- <1>     ENODATAerr:             db      ENODATAmsg,10,0
  1184 0000094D 7661696C61626C650A- <1>
  1185 00000956 00                  <1>
  1186 00000957 54696D657220657870- <1>     ETIMEerr:               db      ETIMEmsg,10,0
  1187 00000960 697265640A00        <1>
  1188 00000966 4F7574206F66207374- <1>     ENOSRerr:               db      ENOSRmsg,10,0
  1189 0000096F 7265616D7320726573- <1>
  1190 00000978 6F75726365730A00    <1>
  1191 00000980 4D616368696E652069- <1>     ENONETerr:              db      ENONETmsg,10,0
  1192 00000989 73206E6F74206F6E20- <1>
  1193 00000992 746865206E6574776F- <1>
  1194 0000099B 726B0A00            <1>
  1195 0000099F 5061636B616765206E- <1>     ENOPKGerr:              db      ENOPKGmsg,10,0
  1196 000009A8 6F7420696E7374616C- <1>
  1197 000009B1 6C65640A00          <1>
  1198 000009B6 4F626A656374206973- <1>     EREMOTEerr:             db      EREMOTEmsg,10,0
  1199 000009BF 2072656D6F74650A00  <1>
  1200 000009C8 4C696E6B2068617320- <1>     ENOLINKerr:             db      ENOLINKmsg,10,0
  1201 000009D1 6265656E2073657665- <1>
  1202 000009DA 7265640A00          <1>
  1203 000009DF 416476657274697365- <1>     EADVerr:                db      EADVmsg,10,0
  1204 000009E8 206572726F720A00    <1>
  1205 000009F0 53726D6F756E742065- <1>     ESRMNTerr:              db      ESRMNTmsg,10,0
  1206 000009F9 72726F720A00        <1>
  1207 000009FF 436F6D6D756E696361- <1>     ECOMMerr:               db      ECOMMmsg,10,0
  1208 00000A08 74696F6E206572726F- <1>
  1209 00000A11 72206F6E2073656E64- <1>
  1210 00000A1A 0A00                <1>
  1211 00000A1C 50726F746F636F6C20- <1>     EPROTOerr:              db      EPROTOmsg,10,0
  1212 00000A25 6572726F720A00      <1>
  1213 00000A2C 4D756C7469686F7020- <1>     EMULTIHOPerr:           db      EMULTIHOPmsg,10,0
  1214 00000A35 617474656D70746564- <1>
  1215 00000A3E 0A00                <1>
  1216 00000A40 524653207370656369- <1>     EDOTDOTerr:             db      EDOTDOTmsg,10,0
  1217 00000A49 666963206572726F72- <1>
  1218 00000A52 0A00                <1>
  1219 00000A54 4E6F74206120646174- <1>     EBADMSGerr:             db      EBADMSG,10,0
  1220 00000A5D 61206D657373616765- <1>
  1221 00000A66 0A00                <1>
  1222 00000A68 56616C756520746F6F- <1>     EOVERFLOWerr:           db      EOVERFLOWmsg,10,0
  1223 00000A71 206C6172676520666F- <1>
  1224 00000A7A 7220646566696E6564- <1>
  1225 00000A83 206461746120747970- <1>
  1226 00000A8C 650A00              <1>
  1227 00000A8F 4E616D65206E6F7420- <1>     ENOTUNIQerr:            db      ENOTUNIQmsg,10,0
  1228 00000A98 756E69717565206F6E- <1>
  1229 00000AA1 206E6574776F726B0A- <1>
  1230 00000AAA 00                  <1>
  1231 00000AAB 46696C652064657363- <1>     EBADFDerr:              db      EBADFDmsg,10,0
  1232 00000AB4 726970746F7220696E- <1>
  1233 00000ABD 206261642073746174- <1>
  1234 00000AC6 650A00              <1>
  1235 00000AC9 52656D6F7465206164- <1>     EREMCHGerr:             db      EREMCHGmsg,10,0
  1236 00000AD2 647265737320636861- <1>
  1237 00000ADB 6E6765640A00        <1>
  1238 00000AE1 43616E206E6F742061- <1>     ELIBACCerr:             db      ELIBACCmsg,10,0
  1239 00000AEA 63636573732061206E- <1>
  1240 00000AF3 656564656420736861- <1>
  1241 00000AFC 726564206C69627261- <1>
  1242 00000B05 72790A00            <1>
  1243 00000B09 416363657373696E67- <1>     ELIBBADerr:             db      ELIBBADmsg,10,0
  1244 00000B12 206120636F72727570- <1>
  1245 00000B1B 746564207368617265- <1>
  1246 00000B24 64206C696272617279- <1>
  1247 00000B2D 0A00                <1>
  1248 00000B2F 2E6C69622073656374- <1>     ELIBSCNerr:             db      ELIBSCNmsg,10,0
  1249 00000B38 696F6E20696E20612E- <1>
  1250 00000B41 6F757420636F727275- <1>
  1251 00000B4A 707465640A00        <1>
  1252 00000B50 417474656D7074696E- <1>     ELIBMAXerr:             db      ELIBMAXmsg,10,0
  1253 00000B59 6720746F206C696E6B- <1>
  1254 00000B62 20696E20746F6F206D- <1>
  1255 00000B6B 616E79207368617265- <1>
  1256 00000B74 64206C696272617269- <1>
  1257 00000B7D 65730A00            <1>
  1258 00000B81 43616E6E6F74206578- <1>     ELIBEXECerr:            db      ELIBEXECmsg,10,0
  1259 00000B8A 656320612073686172- <1>
  1260 00000B93 6564206C6962726172- <1>
  1261 00000B9C 79206469726563746C- <1>
  1262 00000BA5 790A00              <1>
  1263 00000BA8 496C6C6567616C2062- <1>     EILSEQerr:              db      EILSEQmsg,10,0
  1264 00000BB1 797465207365717565- <1>
  1265 00000BBA 6E63650A00          <1>
  1266 00000BBF 496E74657272757074- <1>     ERESTARTerr:            db      ERESTARTmsg,10,0
  1267 00000BC8 65642073797374656D- <1>
  1268 00000BD1 2063616C6C2073686F- <1>
  1269 00000BDA 756C64206265207265- <1>
  1270 00000BE3 737461727465640A00  <1>
  1271 00000BEC 53747265616D732070- <1>     ESTRPIPEerr:            db      ESTRPIPEmsg,10,0
  1272 00000BF5 697065206572726F72- <1>
  1273 00000BFE 0A00                <1>
  1274 00000C00 546F6F206D616E7920- <1>     EUSERSerr:              db      EUSERSmsg,10,0
  1275 00000C09 75736572730A00      <1>
  1276 00000C10 536F636B6574206F70- <1>     ENOTSOCKerr:            db      ENOTSOCKmsg,10,0
  1277 00000C19 65726174696F6E206F- <1>
  1278 00000C22 6E206E6F6E2D736F63- <1>
  1279 00000C2B 6B65740A00          <1>
  1280 00000C30 44657374696E617469- <1>     EDESTADDRREQerr:        db      EDESTADDRREQmsg,10,0
  1281 00000C39 6F6E20616464726573- <1>
  1282 00000C42 732072657175697265- <1>
  1283 00000C4B 640A00              <1>
  1284 00000C4E 4D6573736167652074- <1>     EMSGSIZEerr:            db      EMSGSIZEmsg,10,0
  1285 00000C57 6F6F206C6F6E670A00  <1>
  1286 00000C60 50726F746F636F6C20- <1>     EPROTOTYPEerr:          db      EPROTOTYPEmsg,10,0
  1287 00000C69 77726F6E6720747970- <1>
  1288 00000C72 6520666F7220736F63- <1>
  1289 00000C7B 6B65740A00          <1>
  1290 00000C80 50726F746F636F6C20- <1>     ENOPROTOOPTerr:         db      ENOPROTOOPTmsg,10,0
  1291 00000C89 6E6F7420617661696C- <1>
  1292 00000C92 61626C650A00        <1>
  1293 00000C98 50726F746F636F6C20- <1>     EPROTONOSUPPORTerr:     db      EPROTONOSUPPORTmsg,10,0
  1294 00000CA1 6E6F7420737570706F- <1>
  1295 00000CAA 727465640A00        <1>
  1296 00000CB0 536F636B6574207479- <1>     ESOCKTNOSUPPORTerr:     db      ESOCKTNOSUPPORTmsg,10,0
  1297 00000CB9 7065206E6F74207375- <1>
  1298 00000CC2 70706F727465640A00  <1>
  1299 00000CCB 4F7065726174696F6E- <1>     EOPNOTSUPPerr:          db      EOPNOTSUPPmsg,10,0
  1300 00000CD4 206E6F742073757070- <1>
  1301 00000CDD 6F72746564206F6E20- <1>
  1302 00000CE6 7472616E73706F7274- <1>
  1303 00000CEF 20656E64706F696E74- <1>
  1304 00000CF8 0A00                <1>
  1305 00000CFA 50726F746F636F6C20- <1>     EPFNOSUPPORTerr:        db      EPFNOSUPPORTmsg,10,0
  1306 00000D03 66616D696C79206E6F- <1>
  1307 00000D0C 7420737570706F7274- <1>
  1308 00000D15 65640A00            <1>
  1309 00000D19 416464726573732066- <1>     EAFNOSUPPORTerr:        db      EAFNOSUPPORTmsg,10,0
  1310 00000D22 616D696C79206E6F74- <1>
  1311 00000D2B 20737570706F727465- <1>
  1312 00000D34 642062792070726F74- <1>
  1313 00000D3D 6F636F6C0A00        <1>
  1314 00000D43 416464726573732061- <1>     EADDRINUSEerr:          db      EADDRINUSEmsg,10,0
  1315 00000D4C 6C726561647920696E- <1>
  1316 00000D55 207573650A00        <1>
  1317 00000D5B 43616E6E6F74206173- <1>     EADDRNOTAVAILerr:       db      EADDRNOTAVAILmsg,10,0
  1318 00000D64 7369676E2072657175- <1>
  1319 00000D6D 657374656420616464- <1>
  1320 00000D76 726573730A00        <1>
  1321 00000D7C 4E6574776F726B2069- <1>     ENETDOWNerr:            db      ENETDOWNmsg,10,0
  1322 00000D85 7320646F776E0A00    <1>
  1323 00000D8D 4E6574776F726B2069- <1>     ENETUNREACHerr:         db      ENETUNREACHmsg,10,0
  1324 00000D96 7320756E7265616368- <1>
  1325 00000D9F 61626C650A00        <1>
  1326 00000DA5 4E6574776F726B2064- <1>     ENETRESETerr:           db      ENETRESETmsg,10,0
  1327 00000DAE 726F7070656420636F- <1>
  1328 00000DB7 6E6E656374696F6E20- <1>
  1329 00000DC0 62656361757365206F- <1>
  1330 00000DC9 662072657365740A00  <1>
  1331 00000DD2 536F66747761726520- <1>     ECONNABORTEDerr:        db      ECONNABORTEDmsg,10,0
  1332 00000DDB 63617573656420636F- <1>
  1333 00000DE4 6E6E656374696F6E20- <1>
  1334 00000DED 61626F72740A00      <1>
  1335 00000DF4 436F6E6E656374696F- <1>     ECONNRESETerr:          db      ECONNRESETmsg,10,0
  1336 00000DFD 6E2072657365742062- <1>
  1337 00000E06 7920706565720A00    <1>
  1338 00000E0E 4E6F20627566666572- <1>     ENOBUFSerr:             db      ENOBUFSmsg,10,0
  1339 00000E17 207370616365206176- <1>
  1340 00000E20 61696C61626C650A00  <1>
  1341 00000E29 5472616E73706F7274- <1>     EISCONNerr:             db      EISCONNmsg,10,0
  1342 00000E32 20656E64706F696E74- <1>
  1343 00000E3B 20697320616C726561- <1>
  1344 00000E44 647920636F6E6E6563- <1>
  1345 00000E4D 7465640A00          <1>
  1346 00000E52 5472616E73706F7274- <1>     ENOTCONNerr:            db      ENOTCONNmsg,10,0
  1347 00000E5B 20656E64706F696E74- <1>
  1348 00000E64 206973206E6F742063- <1>
  1349 00000E6D 6F6E6E65637465640A- <1>
  1350 00000E76 00                  <1>
  1351 00000E77 43616E6E6F74207365- <1>     ESHUTDOWNerr:           db      ESHUTDOWNmsg,10,0
  1352 00000E80 6E6420616674657220- <1>
  1353 00000E89 7472616E73706F7274- <1>
  1354 00000E92 20656E64706F696E74- <1>
  1355 00000E9B 2073687574646F776E- <1>
  1356 00000EA4 0A00                <1>
  1357 00000EA6 546F6F206D616E7920- <1>     ETOOMANYREFSerr:        db      ETOOMANYREFSmsg,10,0
  1358 00000EAF 7265666572656E6365- <1>
  1359 00000EB8 733A2063616E6E6F74- <1>
  1360 00000EC1 2073706C6963650A00  <1>
  1361 00000ECA 436F6E6E656374696F- <1>     ETIMEDOUTerr:           db      ETIMEDOUTmsg,10,0
  1362 00000ED3 6E2074696D6564206F- <1>
  1363 00000EDC 75740A00            <1>
  1364 00000EE0 436F6E6E656374696F- <1>     ECONNREFUSEDerr:        db      ECONNREFUSEDmsg,10,0
  1365 00000EE9 6E2072656675736564- <1>
  1366 00000EF2 0A00                <1>
  1367 00000EF4 486F73742069732064- <1>     EHOSTDOWNerr:           db      EHOSTDOWNmsg,10,0
  1368 00000EFD 6F776E0A00          <1>
  1369 00000F02 4E6F20726F75746520- <1>     EHOSTUNREACHerr:        db      EHOSTUNREACHmsg,10,0
  1370 00000F0B 746F20686F73740A00  <1>
  1371 00000F14 4F7065726174696F6E- <1>     EALREADYerr:            db      EALREADYmsg,10,0
  1372 00000F1D 20616C726561647920- <1>
  1373 00000F26 696E2070726F677265- <1>
  1374 00000F2F 73730A00            <1>
  1375 00000F33 4F7065726174696F6E- <1>     EINPROGRESSerr:         db      EINPROGRESSmsg,10,0
  1376 00000F3C 206E6F7720696E2070- <1>
  1377 00000F45 726F67726573730A00  <1>
  1378 00000F4E 5374616C65204E4653- <1>     ESTALEerr:              db      ESTALEmsg,10,0
  1379 00000F57 2066696C652068616E- <1>
  1380 00000F60 646C650A00          <1>
  1381 00000F65 537472756374757265- <1>     EUCLEANerr:             db      EUCLEANmsg,10,0
  1382 00000F6E 206E6565647320636C- <1>
  1383 00000F77 65616E696E670A00    <1>
  1384 00000F7F 4E6F7420612058454E- <1>     ENOTNAMerr:             db      ENOTNAMmsg,10,0
  1385 00000F88 4958206E616D656420- <1>
  1386 00000F91 747970652066696C65- <1>
  1387 00000F9A 0A00                <1>
  1388 00000F9C 4E6F2058454E495820- <1>     ENAVAILerr:             db      ENAVAILmsg,10,0
  1389 00000FA5 73656D6170686F7265- <1>
  1390 00000FAE 7320617661696C6162- <1>
  1391 00000FB7 6C650A00            <1>
  1392 00000FBB 49732061206E616D65- <1>     EISNAMerr:              db      EISNAMmsg,10,0
  1393 00000FC4 642074797065206669- <1>
  1394 00000FCD 6C650A00            <1>
  1395 00000FD1 52656D6F746520492F- <1>     EREMOTEIOerr:           db      EREMOTEIOmsg,10,0
  1396 00000FDA 4F206572726F720A00  <1>
  1397 00000FE3 51756F746120657863- <1>     EDQUOTerr:              db      EDQUOTmsg,10,0
  1398 00000FEC 65656465640A00      <1>
  1399 00000FF3 4E6F206D656469756D- <1>     ENOMEDIUMerr:           db      ENOMEDIUMmsg,10,0
  1400 00000FFC 20666F756E640A00    <1>
  1401 00001004 57726F6E67206D6564- <1>     EMEDIUMTYPEerr:         db      EMEDIUMTYPEmsg,10,0
  1402 0000100D 69756D20747970650A- <1>
  1403 00001016 00                  <1>
  1404 00001017 4F7065726174696F6E- <1>     ECANCELEDerr:           db      ECANCELEDmsg,10,0
  1405 00001020 2043616E63656C6564- <1>
  1406 00001029 0A00                <1>
  1407 0000102B 526571756972656420- <1>     ENOKEYerr:              db      ENOKEYmsg,10,0
  1408 00001034 6B6579206E6F742061- <1>
  1409 0000103D 7661696C61626C650A- <1>
  1410 00001046 00                  <1>
  1411 00001047 4B6579206861732065- <1>     EKEYEXPIREDerr:         db      EKEYEXPIREDmsg,10,0
  1412 00001050 7870697265640A00    <1>
  1413 00001058 4B6579206861732062- <1>     EKEYREVOKEDerr:         db      EKEYREVOKEDmsg,10,0
  1414 00001061 65656E207265766F6B- <1>
  1415 0000106A 65640A00            <1>
  1416 0000106E 4B6579207761732072- <1>     EKEYREJECTEDerr:        db      EKEYREJECTEDmsg,10,0
  1417 00001077 656A65637465642062- <1>
  1418 00001080 792073657276696365- <1>
  1419 00001089 0A00                <1>
  1420 0000108B 4F776E657220646965- <1>     EOWNERDEADerr:          db      EOWNERDEADmsg,10,0
  1421 00001094 640A00              <1>
  1422 00001097 5374617465206E6F74- <1>     ENOTRECOVERABLEerr:     db      ENOTRECOVERABLEmsg,10,0
  1423 000010A0 207265636F76657261- <1>
  1424 000010A9 626C650A00          <1>
  1425 000010AE 4F7065726174696F6E- <1>     ERFKILLerr:             db      ERFKILLmsg,10,0
  1426 000010B7 206E6F7420706F7373- <1>
  1427 000010C0 69626C652064756520- <1>
  1428 000010C9 746F2052462D6B696C- <1>
  1429 000010D2 6C0A00              <1>
  1430 000010D5 4D656D6F7279207061- <1>     EHWPOISONerr:           db      EHWPOISONmsg,10,0
  1431 000010DE 676520686173206861- <1>
  1432 000010E7 726477617265206572- <1>
  1433 000010F0 726F720A00          <1>
  1434                              <1> 
  1435                              <1>     ; custom error messages
  1436 000010F5 75736167653A207065- <1>     ESHOWUSAGEerr:          db "usage: pem1asm sourcefile -o binaryfile",10,0
  1437 000010FE 6D3161736D20736F75- <1>
  1438 00001107 72636566696C65202D- <1>
  1439 00001110 6F2062696E61727966- <1>
  1440 00001119 696C650A00          <1>
  1441 0000111E 696C6C6567616C206F- <1>     EILEGALOPTIONerr:       db "illegal option, use -o for destination file",10,0
  1442 00001127 7074696F6E2C207573- <1>
  1443 00001130 65202D6F20666F7220- <1>
  1444 00001139 64657374696E617469- <1>
  1445 00001142 6F6E2066696C650A00  <1>
  1446 0000114B 46696C652065786973- <1>     EFILEEXISTSerr:         db "File exists, overwrite? [Y/n] ",0
  1447 00001154 74732C206F76657277- <1>
  1448 0000115D 726974653F205B592F- <1>
  1449 00001166 6E5D2000            <1>
  1450 0000116A 4E6F74207573696E67- <1>     ENOTUSINGerr:           db "Not using destination file name as requested, exiting.",10,0
  1451 00001173 2064657374696E6174- <1>
  1452 0000117C 696F6E2066696C6520- <1>
  1453 00001185 6E616D652061732072- <1>
  1454 0000118E 65717565737465642C- <1>
  1455 00001197 2065786974696E672E- <1>
  1456 000011A0 0A00                <1>
  1457 000011A2 496C6C6567616C2063- <1>     EILEGALCHARerr:         db "Illegal character in source ",0
  1458 000011AB 686172616374657220- <1>
  1459 000011B4 696E20736F75726365- <1>
  1460 000011BD 2000                <1>
  1461                              <1>     
  1462                                      
  1463 000011BF 3A20                        COLONmsg:           db      ": "
  1464                                      COLONmsg.length:    equ     $-COLONmsg
  1465 000011C1 0A                          CRLFmsg:            db      10
  1466                                      CRLFmsg.length:     equ     $-CRLFmsg
  1467                                      
  1468 000011C2 544553542042494E41-         binary:             db      "TEST BINARY FILE",10
  1469 000011CB 52592046494C450A   
  1470                                      binary.length:      equ     $-binary
  1471                                      
  1472 000011D3 6174206C696E653A20          errorline:          db      "at line: "
  1473                                      .length:            equ     $-errorline
  1474 000011DC 20706F736974696F6E-         errorpos:           db      " position: "
  1475 000011E5 3A20               
  1476                                      .length:            equ     $-errorpos
  1477                                          
  1478                                      ; stat structure
  1479                                      STAT stat
  1480                              <1>  %1: ISTRUC STAT_STRUC
  1481 000011E7 0000000000000000    <1>  at STAT_STRUC.st_dev, dq 0
  1482 000011EF 0000000000000000    <1>  at STAT_STRUC.st_ino, dq 0
  1483 000011F7 0000000000000000    <1>  at STAT_STRUC.st_nlink, dq 0
  1484 000011FF 00000000            <1>  at STAT_STRUC.st_mod, dd 0
  1485 00001203 00000000            <1>  at STAT_STRUC.st_uid, dd 0
  1486 00001207 00000000            <1>  at STAT_STRUC.st_gid, dd 0
  1487 0000120B 0000000000000000    <1>  at STAT_STRUC.st_rdev, dq 0
  1488 00001213 00000000            <1>  at STAT_STRUC._pad1, dd 0
  1489 00001217 0000000000000000    <1>  at STAT_STRUC.st_size, dq 0
  1490 0000121F 00000000            <1>  at STAT_STRUC.st_blksize, dd 0
  1491 00001223 00000000            <1>  at STAT_STRUC._pad2, dd 0
  1492 00001227 0000000000000000    <1>  at STAT_STRUC.st_blocks, dq 0
  1493 0000122F 0000000000000000    <1>  at STAT_STRUC.st_atime, dq 0
  1494 00001237 0000000000000000    <1>  at STAT_STRUC.st_atime_nsec, dq 0
  1495 0000123F 0000000000000000    <1>  at STAT_STRUC.st_mtime, dq 0
  1496 00001247 0000000000000000    <1>  at STAT_STRUC.st_mtime_nsec, dq 0
  1497 0000124F 0000000000000000    <1>  at STAT_STRUC.st_ctime, dq 0
  1498 00001257 0000000000000000    <1>  at STAT_STRUC.st_ctime_nsec, dq 0
  1499 0000125F 0000000000000000    <1>  at STAT_STRUC._unused1, dq 0
  1500 00001267 0000000000000000    <1>  at STAT_STRUC._unused2, dq 0
  1501 0000126F 0000000000000000    <1>  at STAT_STRUC._unused3, dq 0
  1502                              <1>  IEND
  1503                              <1> 
  1504                              <1> 
  1505                              <1> 
  1506                              <1>  %define %1.st_dev %1+STAT_STRUC.st_dev
  1507                              <1>  %define %1.st_ino %1+STAT_STRUC.st_ino
  1508                              <1>  %define %1.st_nlink %1+STAT_STRUC.st_nlink
  1509                              <1>  %define %1.st_mod %1+STAT_STRUC.st_mod
  1510                              <1>  %define %1.st_uid %1+STAT_STRUC.st_uid
  1511                              <1>  %define %1.st_gid %1+STAT_STRUC.st_gid
  1512                              <1>  %define %1.st_rdev %1+STAT_STRUC.st_rdev
  1513                              <1>  %define %1._pad1 %1+STAT_STRUC._pad1
  1514                              <1>  %define %1.st_size %1+STAT_STRUC.st_size
  1515                              <1>  %define %1.st_blksize %1+STAT_STRUC.st_blksize
  1516                              <1>  %define %1._pad2 %1+STAT_STRUC._pad2
  1517                              <1>  %define %1.st_blocks %1+STAT_STRUC.st_blocks
  1518                              <1>  %define %1.st_atime %1+STAT_STRUC.st_atime
  1519                              <1>  %define %1.st_atime_nsec %1+STAT_STRUC.st_atime_nsec
  1520                              <1>  %define %1.st_mtime %1+STAT_STRUC.st_mtime
  1521                              <1>  %define %1.st_mtime_nsec %1+STAT_STRUC.st_mtime_nsec
  1522                              <1>  %define %1.st_ctime %1+STAT_STRUC.st_ctime
  1523                              <1>  %define %1.st_ctime_nsec %1+STAT_STRUC.st_ctime_nsec
  1524                              <1>  %define %1._unused1 %1+STAT_STRUC._unused1
  1525                              <1>  %define %1._unused2 %1+STAT_STRUC._unused2
  1526                              <1>  %define %1._unused3 %1+STAT_STRUC._unused3
  1527                                      TERMIOS termios
  1528                              <1>  %1: ISTRUC TERMIOS_STRUC
  1529 00001277 00000000            <1>  at TERMIOS_STRUC.c_iflag, dd 0
  1530 0000127B 00000000            <1>  at TERMIOS_STRUC.c_oflag, dd 0
  1531 0000127F 00000000            <1>  at TERMIOS_STRUC.c_cflag, dd 0
  1532 00001283 00000000            <1>  at TERMIOS_STRUC.c_lflag, dd 0
  1533 00001287 00                  <1>  at TERMIOS_STRUC.c_line, db 0
  1534 00001288 00<rept>            <1>  at TERMIOS_STRUC.c_cc, times 19 db 0
  1535                              <1>  IEND
  1536                              <1>  %define %1.c_iflag %1+TERMIOS_STRUC.c_iflag
  1537                              <1>  %define %1.c_oflag %1+TERMIOS_STRUC.c_oflag
  1538                              <1>  %define %1.c_cflag %1+TERMIOS_STRUC.c_cflag
  1539                              <1>  %define %1.c_lflag %1+TERMIOS_STRUC.c_lflag
  1540                              <1>  %define %1.c_line %1+TERMIOS_STRUC.c_line
  1541                              <1>  %define %1.c_cc %1+TERMIOS_STRUC.c_cc
  1542                                          
  1543                                  section .text
  1544                                  
  1545                                  global _start
  1546                                  _start:
  1547                                  
  1548 00000000 58                          pop         rax                 ; argc
  1549 00000001 4883F804                    cmp         rax, ARGC
  1550 00000005 7402                        je          parseCommandLine    ; argumentcount is correct
  1551 00000007 EB1E                        jmp         usage
  1552                                  parseCommandLine:    
  1553 00000009 58                          pop         rax             ; pointer to programname
  1554 0000000A 5E                          pop         rsi             ; pointer to sourcefilename
  1555 0000000B 58                          pop         rax             ; read option -o
  1556 0000000C 5F                          pop         rdi                             ; pointer to destination file
  1557 0000000D 668B00                      mov         ax, word[rax]
  1558 00000010 663D2D6F                    cmp         ax, "-o"        ; option -o?
  1559 00000014 7427                        je          checkFiles
  1560 00000016 48C7C079FFFFFF              mov         rax, EILEGALOPTION
  1561 0000001D E89B030000                  call        getError
  1562 00000022 E855040000                  call        PrintSTDERR
  1563                                  usage:
  1564 00000027 48C7C07AFFFFFF              mov         rax, ESHOWUSAGE
  1565 0000002E E88A030000                  call        getError
  1566 00000033 E844040000                  call        PrintSTDERR
  1567 00000038 E96C030000                  jmp         exit
  1568                                  
  1569                                  checkFiles:
  1570                                      ; RSI has the pointer to the sourcefile
  1571                                      ; RDI has the pointer to the destinationfile
  1572                                      
  1573 0000003D 48893425[10000000]          mov         qword[ptrSourceFile], rsi
  1574 00000045 48893C25[18000000]          mov         qword[ptrDestinationFile], rdi
  1575                                      
  1576                                      ; Open the source file
  1577 0000004D 488B3C25[10000000]          mov         rdi, qword [ptrSourceFile]
  1578 00000055 BE00000000                  mov         rsi, O_RDONLY
  1579 0000005A B802000000                  mov         rax, SYS_OPEN
  1580 0000005F 0F05                        syscall
  1581 00000061 4883F800                    cmp         rax, 0
  1582 00000065 7F12                        jg          gotfdsource                                         ; we got a filedescriptor
  1583 00000067 488B3425[10000000]          mov         rsi, qword [ptrSourceFile]
  1584 0000006F E8BE030000                  call        PrintFileError
  1585 00000074 E930030000                  jmp         exit
  1586                                  gotfdsource:
  1587                                          ; save the descriptor for later use
  1588 00000079 48890425[00000000]          mov         [fdsource], rax
  1589                                      
  1590                                      ; try to open the destination file
  1591 00000081 488B3C25[18000000]          mov         rdi, qword[ptrDestinationFile]
  1592 00000089 BE02000000                  mov         rsi, O_RDWR                                         ; open in read/write mode
  1593 0000008E B802000000                  mov         rax, SYS_OPEN
  1594 00000093 0F05                        syscall
  1595 00000095 4883F800                    cmp         rax, 0              ; file exists?
  1596 00000099 7C6B                        jl          createfile          ; file doesn't exists, create it
  1597                                      
  1598 0000009B 48890425[08000000]          mov         qword[fddestination], rax                       ; save fd
  1599 000000A3 488B3425[18000000]          mov         rsi, qword [ptrDestinationFile]
  1600 000000AB 48C7C078FFFFFF              mov         rax, EFILEEXISTS                
  1601 000000B2 E87B030000                  call        PrintFileError
  1602                                      
  1603                                  continueWaiting:
  1604 000000B7 E8E6030000                  call        WaitForKeyPress
  1605 000000BC 3C59                        cmp         al,"Y"
  1606 000000BE 7404                        je          gotAnswer
  1607 000000C0 3C6E                        cmp         al,"n"
  1608 000000C2 75F3                        jne         continueWaiting      
  1609                                  gotAnswer:
  1610 000000C4 50                          push        rax                                             ; save the answer
  1611                                      ; print the users answer
  1612 000000C5 48BE-                       mov         rsi, buffer
  1613 000000C7 [2000000000000000] 
  1614 000000CF BA01000000                  mov         rdx, 1
  1615 000000D4 E8BD030000                  call        Print
  1616 000000D9 48BE-                       mov         rsi, CRLFmsg
  1617 000000DB [C111000000000000] 
  1618 000000E3 E8AE030000                  call        Print
  1619 000000E8 58                          pop         rax                                             ; retrieve the answer
  1620 000000E9 3C59                        cmp         al,"Y"
  1621 000000EB 744D                        je          startAssembling
  1622                                  
  1623                                      ; we may not use the existing destination file,
  1624                                      ; inform user, ask to select other name or quit
  1625 000000ED 488B3425[18000000]          mov         rsi, qword[ptrDestinationFile]
  1626 000000F5 48C7C077FFFFFF              mov         rax, ENOTUSING
  1627 000000FC E831030000                  call        PrintFileError
  1628 00000101 E985020000                  jmp         closeDestinationFile
  1629                                  
  1630                                  createfile:
  1631                                      ; file doesn't exists, create the file with permissions 644 octal,
  1632                                      ; taking umask in consideration
  1633 00000106 488B3C25[18000000]          mov         rdi, qword [ptrDestinationFile]
  1634 0000010E BEA4010000                  mov         rsi, 644q              ; access mode
  1635 00000113 B855000000                  mov         rax, SYS_CREAT
  1636 00000118 0F05                        syscall
  1637                                      ; if we got a file descriptor then the file is created
  1638 0000011A 4883F800                    cmp         rax, 0
  1639 0000011E 7D12                        jge         savefddestination
  1640                                      ; we got an error creating the file, inform user and close fd source
  1641 00000120 488B3425[18000000]          mov         rsi, qword [ptrDestinationFile]
  1642 00000128 E805030000                  call        PrintFileError
  1643 0000012D E968020000                  jmp         closeSourceFile
  1644                                      
  1645                                  savefddestination:
  1646 00000132 48890425[08000000]          mov         qword[fddestination], rax
  1647                                      
  1648                                  startAssembling:
  1649                                  
  1650                                  ; read the length of the source file
  1651 0000013A 488B3C25[00000000]          mov         rdi, qword[fdsource]
  1652 00000142 48BE-                       mov         rsi, stat
  1653 00000144 [E711000000000000] 
  1654 0000014C B805000000                  mov         rax, SYS_FSTAT
  1655 00000151 0F05                        syscall
  1656 00000153 4883F800                    cmp         rax, 0
  1657 00000157 0F8CFF010000                jl          fileStatError
  1658                                            
  1659                                  readFileSize:
  1660 0000015D 488B0C25[17120000]          mov         rcx, qword [stat.st_size]                       ; get the file size
  1661 00000165 C60425[2A000000]01          mov         byte[firstCharInLine], 1                        ; set first char in line true
  1662 0000016D C60425[29000000]00          mov         byte[ignoreLine], 0                             ; set ignore line false
  1663 00000175 48C70425[2B000000]-         mov         qword[charInLine], 0
  1664 0000017D 00000000           
  1665 00000181 48C70425[21000000]-         mov         qword[sourcelines], 1
  1666 00000189 01000000           
  1667                                  
  1668                                  ; start reading file contents 
  1669                                  readFileContents:
  1670                                        
  1671                                    ; int 3  DEBUGGING
  1672                                      ; FOR ALL bytes IN file DO
  1673                                        
  1674 0000018D 51                          push        rcx
  1675 0000018E 48BE-                       mov         rsi, buffer
  1676 00000190 [2000000000000000] 
  1677 00000198 BA01000000                  mov         rdx, 1                                          ; read one char at the time
  1678 0000019D B800000000                  mov         rax, SYS_READ
  1679 000001A2 0F05                        syscall
  1680 000001A4 4883F800                    cmp         rax, 0
  1681 000001A8 0F8EAE010000                jle         fileStatError                                   ; in case of an error treat it as a file status error
  1682                                      
  1683                                      ; no read error, start parsing
  1684 000001AE 8A0425[20000000]            mov         al, byte[buffer]
  1685 000001B5 3C0A                        cmp         al, 0x0A
  1686 000001B7 7404                        je          eol
  1687 000001B9 3C0D                        cmp         al, 0x0D  
  1688 000001BB 7527                        jne         noeol
  1689                                  eol:
  1690 000001BD 48830425[21000000]-         add         qword[sourcelines],1
  1691 000001C5 01                 
  1692 000001C6 C60425[29000000]00          mov         byte[ignoreLine], 0                             ; if EOL in remark line set ignore line false
  1693                                  
  1694                                            ; added line to print EOL on STDOUT 26/06/2014
  1695 000001CE E88E020000                        call        PrintBuffer
  1696                                           
  1697 000001D3 48C70425[2B000000]-         mov         qword[charInLine], 0
  1698 000001DB 00000000           
  1699 000001DF E94A010000                  jmp         readNextByte
  1700                                    
  1701                                  noeol:
  1702 000001E4 48FF0425[2B000000]          inc         qword[charInLine]
  1703 000001EC 3C3B                        cmp         al, ";"                                         ; if remark, ignore all following chars until 0x0A is met
  1704 000001EE 750D                        jne         nocomment
  1705 000001F0 C60425[29000000]01          mov         byte[ignoreLine], 1                             ; set ignore line true
  1706 000001F8 E931010000                  jmp         readNextByte
  1707                                      
  1708                                  nocomment:
  1709 000001FD 803C25[29000000]01          cmp         byte[ignoreLine], 1                             ; if ignore line true then don't parse
  1710 00000205 0F8423010000                je          readNextByte
  1711 0000020B 3C20                        cmp         al, " "                                         ; if a space is met, read the next byte
  1712 0000020D 0F841B010000                je          readNextByte
  1713 00000213 3C09                        cmp         al, 0x09                                        ; if a tab is met, read the next byte
  1714 00000215 0F8413010000                je          readNextByte
  1715                                      ;cmp         al, "R"                                         ; R is allowed but not printed, next char must be 0..9 or A..F
  1716                                      ;je          readNextByte
  1717 0000021B 3C30                        cmp         al, "0"                                         ; possible registernumbers, if second and right after R then third must be ':'
  1718 0000021D 0F8404010000                je          writeChar
  1719 00000223 3C31                        cmp         al, "1"                                         ; else memory address, nothing but spaces or '#' allowed
  1720 00000225 0F84FC000000                je          writeChar
  1721 0000022B 3C32                        cmp         al, "2"
  1722 0000022D 0F84F4000000                je          writeChar
  1723 00000233 3C33                        cmp         al, "3"
  1724 00000235 0F84EC000000                je          writeChar
  1725 0000023B 3C34                        cmp         al, "4"
  1726 0000023D 0F84E4000000                je          writeChar
  1727 00000243 3C35                        cmp         al, "5"
  1728 00000245 0F84DC000000                je          writeChar
  1729 0000024B 3C36                        cmp         al, "6"
  1730 0000024D 0F84D4000000                je          writeChar
  1731 00000253 3C37                        cmp         al, "7"
  1732 00000255 0F84CC000000                je          writeChar
  1733 0000025B 3C38                        cmp         al, "8"
  1734 0000025D 0F84C4000000                je          writeChar
  1735 00000263 3C39                        cmp         al, "9"
  1736 00000265 0F84BC000000                je          writeChar
  1737 0000026B 3C41                        cmp         al, "A"
  1738 0000026D 0F84B4000000                je          writeChar
  1739 00000273 3C42                        cmp         al, "B"
  1740 00000275 0F84AC000000                je          writeChar
  1741 0000027B 3C43                        cmp         al, "C"
  1742 0000027D 0F84A4000000                je          writeChar
  1743 00000283 3C44                        cmp         al, "D"
  1744 00000285 0F849C000000                je          writeChar
  1745 0000028B 3C45                        cmp         al, "E"
  1746 0000028D 0F8494000000                je          writeChar
  1747 00000293 3C46                        cmp         al, "F"
  1748 00000295 0F848C000000                je          writeChar
  1749 0000029B 48833C25[2B000000]-         cmp         qword[charInLine],1
  1750 000002A3 01                 
  1751 000002A4 7418                        je          errorIllegalChar
  1752 000002A6 3C48                        cmp         al, "H"
  1753 000002A8 747D                        je          writeChar
  1754 000002AA 3C4C                        cmp         al, "L"
  1755 000002AC 7479                        je          writeChar
  1756 000002AE 3C4F                        cmp         al, "O"
  1757 000002B0 7475                        je          writeChar
  1758 000002B2 3C53                        cmp         al, "S"
  1759 000002B4 7471                        je          writeChar
  1760 000002B6 3C54                        cmp         al, "T"
  1761 000002B8 746D                        je          writeChar
  1762 000002BA 3C55                        cmp         al, "U"
  1763 000002BC 7469                        je          writeChar
  1764                                  errorIllegalChar:    
  1765 000002BE 48C7C076FFFFFF              mov         rax, EILEGALCHAR
  1766 000002C5 E8F3000000                  call        getError
  1767 000002CA E8BA010000                  call        PrintSTDOUT
  1768 000002CF 48BE-                       mov         rsi, errorline
  1769 000002D1 [D311000000000000] 
  1770 000002D9 BA09000000                  mov         rdx, errorline.length
  1771 000002DE E8A6010000                  call        PrintSTDOUT
  1772                                      
  1773 000002E3 488B0425[21000000]          mov         rax, qword[sourcelines]
  1774 000002EB E802010000                  call        PrintDecimal
  1775 000002F0 48BE-                       mov         rsi, errorpos
  1776 000002F2 [DC11000000000000] 
  1777 000002FA BA0B000000                  mov         rdx, errorpos.length
  1778 000002FF E885010000                  call        PrintSTDOUT
  1779 00000304 488B0425[2B000000]          mov         rax, qword[charInLine]
  1780 0000030C E8E1000000                  call        PrintDecimal
  1781 00000311 48BE-                       mov         rsi, CRLFmsg
  1782 00000313 [C111000000000000] 
  1783 0000031B BA01000000                  mov         rdx, CRLFmsg.length
  1784 00000320 E864010000                  call        PrintSTDOUT
  1785 00000325 EB64                        jmp         closeDestinationFile  
  1786                                  
  1787                                  writeChar:
  1788 00000327 E835010000                  call        PrintBuffer
  1789 0000032C 7400                        je          readNextByte
  1790                                                
  1791                                  readNextByte:     
  1792 0000032E 59                          pop         rcx
  1793 0000032F 48FFC9                      dec         rcx
  1794 00000332 4883F900                    cmp         rcx, 0
  1795 00000336 0F8551FEFFFF                jne         readFileContents  
  1796                                  
  1797                                  ; END OF ASSEMBLING
  1798                                  endAssembling:
  1799                                  ; save the assembled binary
  1800 0000033C 488B3C25[08000000]          mov         rdi, qword[fddestination]
  1801 00000344 48BE-                       mov         rsi, binary
  1802 00000346 [C211000000000000] 
  1803 0000034E BA11000000                  mov         rdx, binary.length
  1804 00000353 B801000000                  mov         rax, SYS_WRITE
  1805 00000358 0F05                        syscall
  1806 0000035A EB2F                        jmp         closeDestinationFile
  1807                                      
  1808                                  fileStatError:
  1809 0000035C 488B3425[10000000]          mov         rsi, qword[ptrSourceFile]
  1810 00000364 E8C9000000                  call        PrintFileError
  1811                                      
  1812                                  deleteDestinationFile:  
  1813 00000369 488B3C25[18000000]          mov         rdi, qword[ptrDestinationFile]
  1814 00000371 B857000000                  mov         rax, SYS_UNLINK
  1815 00000376 0F05                        syscall
  1816 00000378 4883F800                    cmp         rax, 0
  1817 0000037C 7D0D                        jge         closeDestinationFile
  1818 0000037E 488B3425[18000000]          mov         rsi, qword[ptrDestinationFile]
  1819 00000386 E8A7000000                  call        PrintFileError
  1820                                  
  1821                                  closeDestinationFile:
  1822 0000038B 488B3C25[08000000]          mov         rdi, qword[fddestination]
  1823 00000393 B803000000                  mov         rax, SYS_CLOSE
  1824 00000398 0F05                        syscall
  1825                                  closeSourceFile:        
  1826 0000039A 488B3C25[00000000]          mov         rdi, qword[fdsource]
  1827 000003A2 B803000000                  mov         rax, SYS_CLOSE
  1828 000003A7 0F05                        syscall
  1829                                          
  1830                                  exit:
  1831                                      ; test n sourcelines read
  1832 000003A9 488B0425[21000000]          mov         rax, qword[sourcelines]
  1833                                      
  1834 000003B1 BF00000000                  mov         rdi, 0
  1835 000003B6 B83C000000                  mov         rax, SYS_EXIT
  1836 000003BB 0F05                        syscall
  1837                                  ;*********************************************
  1838                                  ; END PROGRAM
  1839                                  ;*********************************************
  1840                                  
  1841                                  ; SUBROUTINES
  1842                                  getError:
  1843                                      ; RAX has the error number
  1844 000003BD 48F7D8                      neg         rax                             ; get positive value
  1845 000003C0 48FFC8                      dec         rax                             ; decrement to adjust in list
  1846 000003C3 48C1E003                    shl         rax, 3                          ; multiplicate with 8 (8 bytes = 64 bits)
  1847 000003C7 488BB0[00000000]            mov         rsi, [errorList+rax]            ; load the error message pointer
  1848 000003CE E801000000                  call        getStringLength
  1849 000003D3 C3                          ret
  1850                                      
  1851                                  getStringLength:
  1852                                      ; RSI has the pointer to the string     
  1853 000003D4 50                          push        rax
  1854 000003D5 51                          push        rcx
  1855 000003D6 57                          push        rdi
  1856 000003D7 4889F7                      mov         rdi, rsi
  1857 000003DA 48C7C1FFFFFFFF              mov         rcx, -1                         ; calculate the length
  1858 000003E1 30C0                        xor         al, al                          ; search for terminating 0
  1859 000003E3 F2AE                        repne       scasb
  1860 000003E5 48F7D9                      neg         rcx
  1861 000003E8 48FFC9                      dec         rcx
  1862 000003EB 4889CA                      mov         rdx, rcx                        ; length in RDX
  1863 000003EE 5F                          pop         rdi
  1864 000003EF 59                          pop         rcx
  1865 000003F0 58                          pop         rax
  1866 000003F1 C3                          ret
  1867                                  
  1868                                  PrintDecimal:
  1869                                      ; int 3                       ; DEBUGGING
  1870 000003F2 56                          push        rsi
  1871 000003F3 50                          push        rax
  1872 000003F4 57                          push        rdi
  1873 000003F5 FD                          std
  1874                                      
  1875 000003F6 48BF-                       mov         rdi, decbuffer+39               ; end of buffer
  1876 000003F8 [5A00000000000000] 
  1877                                  .repeat:    
  1878 00000400 4831D2                      xor         rdx, rdx
  1879 00000403 BB0A000000                  mov         rbx, 10                         ; base 10
  1880 00000408 48F7FB                      idiv        rbx                             ; rdx has remainder
  1881 0000040B 4892                        xchg        rax, rdx
  1882 0000040D 0C30                        or          al, "0"
  1883 0000040F AA                          stosb                                       ; save AL
  1884 00000410 4892                        xchg        rax, rdx
  1885 00000412 4883F800                    cmp         rax, 0
  1886 00000416 75E8                        jne         .repeat
  1887                                      
  1888 00000418 48FFC7                      inc         rdi
  1889 0000041B 4889FE                      mov         rsi, rdi
  1890 0000041E 4889FA                      mov         rdx, rdi
  1891 00000421 4881EA[33000000]            sub         rdx, decbuffer
  1892 00000428 E85C000000                  call        PrintSTDOUT
  1893                                      
  1894 0000042D FC                          cld
  1895 0000042E 5F                          pop         rdi
  1896 0000042F 58                          pop         rax
  1897 00000430 5E                          pop         rsi
  1898 00000431 C3                          ret
  1899                                  
  1900                                  PrintFileError:
  1901                                      ; RAX has the errornumber
  1902                                      ; RSI has the pointer to the filename
  1903 00000432 56                          push        rsi
  1904 00000433 50                          push        rax
  1905 00000434 50                          push        rax           
  1906 00000435 E89AFFFFFF                  call        getStringLength
  1907 0000043A E83D000000                  call        PrintSTDERR
  1908 0000043F 48BE-                       mov         rsi, COLONmsg
  1909 00000441 [BF11000000000000] 
  1910 00000449 BA02000000                  mov         rdx, COLONmsg.length
  1911 0000044E E829000000                  call        PrintSTDERR
  1912 00000453 58                          pop         rax
  1913 00000454 E864FFFFFF                  call        getError
  1914 00000459 E81E000000                  call        PrintSTDERR
  1915 0000045E 58                          pop         rax
  1916 0000045F 5E                          pop         rsi
  1917 00000460 C3                          ret
  1918                                  
  1919                                  PrintBuffer:
  1920 00000461 51                          push        rcx
  1921 00000462 56                          push        rsi
  1922 00000463 52                          push        rdx
  1923 00000464 48BE-                       mov         rsi, buffer
  1924 00000466 [2000000000000000] 
  1925 0000046E BA01000000                  mov         rdx, 1
  1926 00000473 E811000000                  call        PrintSTDOUT
  1927 00000478 5A                          pop         rdx
  1928 00000479 5E                          pop         rsi
  1929 0000047A 59                          pop         rcx
  1930 0000047B C3                          ret
  1931                                  
  1932                                  PrintSTDERR:
  1933                                        ; RSI has the pointer to the string
  1934                                        ; RDX has the length to the string
  1935 0000047C 57                          push        rdi
  1936 0000047D BF02000000                  mov         rdi, STDERR
  1937 00000482 E80F000000                  call        Print
  1938 00000487 5F                          pop         rdi
  1939 00000488 C3                          ret
  1940                                    
  1941                                  PrintSTDOUT:
  1942 00000489 57                          push        rdi
  1943 0000048A BF01000000                  mov         rdi, STDOUT
  1944 0000048F E802000000                  call        Print
  1945 00000494 5F                          pop         rdi
  1946 00000495 C3                          ret
  1947                                        
  1948                                  Print:    
  1949 00000496 50                          push        rax
  1950 00000497 51                          push        rcx
  1951 00000498 B801000000                  mov         rax, SYS_WRITE
  1952 0000049D 0F05                        syscall
  1953 0000049F 59                          pop         rcx
  1954 000004A0 58                          pop         rax
  1955 000004A1 C3                          ret               
  1956                                      
  1957                                  WaitForKeyPress:
  1958                                      ; read a key without echoing it back and put the key in a buffer
  1959                                      ; the buffer is 1 byte long
  1960 000004A2 E839000000                  call        TermIOS.Canonical.OFF      ; switch canonical mode off
  1961 000004A7 E842000000                  call        TermIOS.Echo.OFF           ; no echo
  1962 000004AC 48BE-                       mov         rsi, buffer
  1963 000004AE [2000000000000000] 
  1964 000004B6 BA01000000                  mov         rdx, 1
  1965 000004BB BF00000000                  mov         rdi, STDIN
  1966 000004C0 B800000000                  mov         rax, SYS_READ
  1967 000004C5 0F05                        syscall
  1968                                      ; Don't forget to switch canonical mode en echo back on
  1969 000004C7 E80D000000                  call        TermIOS.Canonical.ON       ; switch canonical mode back on
  1970 000004CC E816000000                  call        TermIOS.Echo.ON            ; echo on
  1971 000004D1 8A0425[20000000]            mov         al, byte[buffer]
  1972 000004D8 C3                          ret
  1973                                  
  1974                                  ; **********************************************************************************************    
  1975                                  ; TERMIOS functions:
  1976                                  ; TermIOS.Canonical.ON        : switch canonical mode on
  1977                                  ; TermIOS.Canonical.OFF       : switch canonical mode off
  1978                                  ; TermIOS.Echo.ON             : switch echo mode on
  1979                                  ; TermIOS.Echo.OFF            : switch echo mode off
  1980                                  ; TermIOS.LocalModeFlag.SET   : set the localmode flag described in RAX
  1981                                  ; TermIOS.LocalModeFlag.CLEAR : clear the localmode flag described in RAX 
  1982                                  ; TermIOS.STDIN.Read          : Read the TERMIO flags
  1983                                  ; TermIOS.STDIN.Write         : Write the TERMIO flags
  1984                                  ; TermIOS.IOCTL               : Read or write the localmode flags to or from TERMIOS
  1985                                  ; **********************************************************************************************
  1986                                  
  1987                                  TermIOS.Canonical:
  1988                                  .ON:
  1989 000004D9 B802000000                  mov         rax, ICANON
  1990 000004DE EB15                        jmp         TermIOS.LocalModeFlag.SET
  1991                                  .OFF:
  1992 000004E0 B802000000                  mov         rax,ICANON
  1993 000004E5 EB20                        jmp         TermIOS.LocalModeFlag.CLEAR
  1994                                  TermIOS.Echo:
  1995                                  .ON:
  1996 000004E7 B80A000000                  mov         rax,ECHO
  1997 000004EC EB07                        jmp         TermIOS.LocalModeFlag.SET
  1998                                  .OFF:
  1999 000004EE B80A000000                  mov         rax,ECHO
  2000 000004F3 EB12                        jmp         TermIOS.LocalModeFlag.CLEAR
  2001                                  TermIOS.LocalModeFlag:
  2002                                  .SET:
  2003 000004F5 E821000000                  call        TermIOS.STDIN.READ
  2004 000004FA 090425[83120000]            or          dword [termios.c_lflag], eax
  2005 00000501 E81C000000                  call        TermIOS.STDIN.WRITE
  2006 00000506 C3                          ret
  2007                                  .CLEAR:
  2008 00000507 E80F000000                  call        TermIOS.STDIN.READ
  2009 0000050C F7D0                        not         eax
  2010 0000050E 210425[83120000]            and         [termios.c_lflag], eax
  2011 00000515 E808000000                  call        TermIOS.STDIN.WRITE
  2012 0000051A C3                          ret
  2013                                  ; subroutine for all TCGETS operation on the syscall IOCTL
  2014                                  ; the original value of RCX is restored on exit
  2015                                  TermIOS.STDIN:
  2016                                  .READ:
  2017 0000051B BE01540000                  mov         rsi, TCGETS
  2018 00000520 EB05                        jmp         TermIOS.IOCTL
  2019                                  ; subroutine for all TCSETS operation on the syscall IOCTL
  2020                                  ; the original value of RCX is restored on exit
  2021                                  .WRITE:
  2022 00000522 BE02540000                  mov         rsi, TCSETS
  2023                                  ; subroutine for operations on the syscall IOCTL for STDIN
  2024                                  ; all registers are restored to their original values on exit of the subroutine
  2025                                  TermIOS.IOCTL:
  2026 00000527 50                          push        rax             ; we need to store RAX or TermIOS.LocalFlag functions fail
  2027 00000528 B810000000                  mov         rax, SYS_IOCTL
  2028 0000052D BF00000000                  mov         rdi, STDIN
  2029 00000532 48BA-                       mov         rdx, termios
  2030 00000534 [7712000000000000] 
  2031 0000053C 0F05                        syscall
  2032 0000053E 58                          pop         rax
  2033 0000053F C3                          ret
