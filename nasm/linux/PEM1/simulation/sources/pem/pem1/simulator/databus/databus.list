     1                                  ; Name:         databus.asm
     2                                  ; Build:        see makefile
     3                                  ; Description:  Testprogram for PEM1
     4                                  
     5                                  BITS 64
     6                                  
  1018                                  [list -]
  1019                                  
  1020                                  section .bss
  1021                                      
  1022                                  section .data
  1023 00000000 646174616275732062-         message:               db "databus bit X is "
  1024 00000009 6974205820697320   
  1025                                      .length:               equ $-message
  1026 00000011 7365740A                    messageSet:            db "set", 10
  1027                                      messageSet.length:     equ $-messageSet
  1028 00000015 72657365740A                messageReset:          db "reset", 10
  1029                                      messageReset.length:   equ $-messageReset
  1030 0000001B 6368616E676564200A          messageChanged:        db "changed ", 10
  1031                                      messageChanged.length: equ $-messageChanged
  1032                                      
  1033                                      DATABUS adresbus
  1034                              <1> 
  1035                              <1>  %ifndef DATABUSMACROS
  1036                              <1>  %define DATABUSMACROS
  1037                              <1> 
  1038                              <1>  %macro DATABUSBITSET 1
  1039                              <1>  mov rax, %1
  1040                              <1>  mov rax, [rax]
  1041                              <1>  add rax, BIT_STRUC.Set
  1042                              <1>  call [rax]
  1043                              <1>  %endmacro
  1044                              <1> 
  1045                              <1>  %macro DATABUSBITRESET 1
  1046                              <1>  mov rax, %1
  1047                              <1>  mov rax, [rax]
  1048                              <1>  add rax, BIT_STRUC.Reset
  1049                              <1>  call QWORD [rax]
  1050                              <1>  %endmacro
  1051                              <1> 
  1052                              <1>  %macro DATABUSBITINVERT 1
  1053                              <1>  mov rax, %1
  1054                              <1>  mov rax, [rax]
  1055                              <1>  add rax, BIT_STRUC.Invert
  1056                              <1>  call QWORD [rax]
  1057                              <1>  %endmacro
  1058                              <1> 
  1059                              <1>  %macro DATABUSBITGET 1
  1060                              <1>  mov rax, %1
  1061                              <1>  mov rax, [rax]
  1062                              <1>  add rax, BIT_STRUC.Get
  1063                              <1>  call QWORD [rax]
  1064                              <1>  %endmacro
  1065                              <1> 
  1066                              <1>  %macro DATABUSBITLOAD 1
  1067                              <1>  mov rax, %1
  1068                              <1>  mov rax, [rax]
  1069                              <1>  add rax, BIT_STRUC.Load
  1070                              <1>  call QWORD [rax]
  1071                              <1>  %endmacro
  1072                              <1> 
  1073                              <1>  %macro DATABUSBITONCHANGED 1
  1074                              <1>  mov rax, %1
  1075                              <1>  mov rax, [rax]
  1076                              <1>  add rax, BIT_STRUC.OnChanged
  1077                              <1>  mov [rax], rdx
  1078                              <1>  %endmacro
  1079                              <1> 
  1080                              <1>  %macro DATABUSBITONSET 1
  1081                              <1>  mov rax, %1
  1082                              <1>  mov rax, [rax]
  1083                              <1>  add rax, BIT_STRUC.Set
  1084                              <1>  mov [rax], rdx
  1085                              <1>  %endmacro
  1086                              <1> 
  1087                              <1>  %macro DATABUSBITONRESET 1
  1088                              <1>  mov rax, %1
  1089                              <1>  mov rax, [rax]
  1090                              <1>  add rax, BIT_STRUC.OnReset
  1091                              <1>  mov [rax], rdx
  1092                              <1>  %endmacro
  1093                              <1> 
  1094                              <1>  %endif
  1095                              <1> 
  1096                              <1>  %define %1.ptr %1+DATABUS_STRUC
  1097                              <1> 
  1098                              <1>  %define %1.bit0 %1+DATABUS_STRUC.bit0
  1099                              <1>  %define %1.bit1 %1+DATABUS_STRUC.bit1
  1100                              <1>  %define %1.bit2 %1+DATABUS_STRUC.bit2
  1101                              <1>  %define %1.bit3 %1+DATABUS_STRUC.bit3
  1102                              <1>  %define %1.bit4 %1+DATABUS_STRUC.bit4
  1103                              <1>  %define %1.bit5 %1+DATABUS_STRUC.bit5
  1104                              <1>  %define %1.bit6 %1+DATABUS_STRUC.bit6
  1105                              <1>  %define %1.bit7 %1+DATABUS_STRUC.bit7
  1106                              <1> 
  1107                              <1>  %define %1.bit0.ptr QWORD [%1+DATABUS_STRUC.bit0]
  1108                              <1>  %define %1.bit1.ptr QWORD [%1+DATABUS_STRUC.bit1]
  1109                              <1>  %define %1.bit2.ptr QWORD [%1+DATABUS_STRUC.bit2]
  1110                              <1>  %define %1.bit3.ptr QWORD [%1+DATABUS_STRUC.bit3]
  1111                              <1>  %define %1.bit4.ptr QWORD [%1+DATABUS_STRUC.bit4]
  1112                              <1>  %define %1.bit5.ptr QWORD [%1+DATABUS_STRUC.bit5]
  1113                              <1>  %define %1.bit6.ptr QWORD [%1+DATABUS_STRUC.bit6]
  1114                              <1>  %define %1.bit7.ptr QWORD [%1+DATABUS_STRUC.bit7]
  1115                              <1> 
  1116                              <1>  %define %1.bit0.value BYTE [%1.BIT0]
  1117                              <1>  %define %1.bit1.value BYTE [%1.BIT1]
  1118                              <1>  %define %1.bit2.value BYTE [%1.BIT2]
  1119                              <1>  %define %1.bit3.value BYTE [%1.BIT3]
  1120                              <1>  %define %1.bit4.value BYTE [%1.BIT4]
  1121                              <1>  %define %1.bit5.value BYTE [%1.BIT5]
  1122                              <1>  %define %1.bit6.value BYTE [%1.BIT6]
  1123                              <1>  %define %1.bit7.value BYTE [%1.BIT7]
  1124                              <1> 
  1125                              <1>  %define %1.bit0.Set DATABUSBITSET %1.bit0
  1126                              <1>  %define %1.bit1.Set DATABUSBITSET %1.bit1
  1127                              <1>  %define %1.bit2.Set DATABUSBITSET %1.bit2
  1128                              <1>  %define %1.bit3.Set DATABUSBITSET %1.bit3
  1129                              <1>  %define %1.bit4.Set DATABUSBITSET %1.bit4
  1130                              <1>  %define %1.bit5.Set DATABUSBITSET %1.bit5
  1131                              <1>  %define %1.bit6.Set DATABUSBITSET %1.bit6
  1132                              <1>  %define %1.bit7.Set DATABUSBITSET %1.bit7
  1133                              <1> 
  1134                              <1>  %define %1.bit0.Reset DATABUSBITRESET %1.bit0
  1135                              <1>  %define %1.bit1.Reset DATABUSBITRESET %1.bit1
  1136                              <1>  %define %1.bit2.Reset DATABUSBITRESET %1.bit2
  1137                              <1>  %define %1.bit3.Reset DATABUSBITRESET %1.bit3
  1138                              <1>  %define %1.bit4.Reset DATABUSBITRESET %1.bit4
  1139                              <1>  %define %1.bit5.Reset DATABUSBITRESET %1.bit5
  1140                              <1>  %define %1.bit6.Reset DATABUSBITRESET %1.bit6
  1141                              <1>  %define %1.bit7.Reset DATABUSBITRESET %1.bit7
  1142                              <1> 
  1143                              <1>  %define %1.bit0.Invert DATABUSBITINVERT %1.bit0
  1144                              <1>  %define %1.bit1.Invert DATABUSBITINVERT %1.bit1
  1145                              <1>  %define %1.bit2.Invert DATABUSBITINVERT %1.bit2
  1146                              <1>  %define %1.bit3.Invert DATABUSBITINVERT %1.bit3
  1147                              <1>  %define %1.bit4.Invert DATABUSBITINVERT %1.bit4
  1148                              <1>  %define %1.bit5.Invert DATABUSBITINVERT %1.bit5
  1149                              <1>  %define %1.bit6.Invert DATABUSBITINVERT %1.bit6
  1150                              <1>  %define %1.bit7.Invert DATABUSBITINVERT %1.bit7
  1151                              <1> 
  1152                              <1>  %define %1.bit0.Get DATABUSBITGET %1.bit0
  1153                              <1>  %define %1.bit1.Get DATABUSBITGET %1.bit1
  1154                              <1>  %define %1.bit2.Get DATABUSBITGET %1.bit2
  1155                              <1>  %define %1.bit3.Get DATABUSBITGET %1.bit3
  1156                              <1>  %define %1.bit4.Get DATABUSBITGET %1.bit4
  1157                              <1>  %define %1.bit5.Get DATABUSBITGET %1.bit5
  1158                              <1>  %define %1.bit6.Get DATABUSBITGET %1.bit6
  1159                              <1>  %define %1.bit7.Get DATABUSBITGET %1.bit7
  1160                              <1> 
  1161                              <1>  %define %1.bit0.Load DATABUSBITLOAD %1.bit0
  1162                              <1>  %define %1.bit1.Load DATABUSBITLOAD %1.bit1
  1163                              <1>  %define %1.bit2.Load DATABUSBITLOAD %1.bit2
  1164                              <1>  %define %1.bit3.Load DATABUSBITLOAD %1.bit3
  1165                              <1>  %define %1.bit4.Load DATABUSBITLOAD %1.bit4
  1166                              <1>  %define %1.bit5.Load DATABUSBITLOAD %1.bit5
  1167                              <1>  %define %1.bit6.Load DATABUSBITLOAD %1.bit6
  1168                              <1>  %define %1.bit7.Load DATABUSBITLOAD %1.bit7
  1169                              <1> 
  1170                              <1>  %define %1.bit0.OnChanged DATABUSBITONCHANGED %1.bit0
  1171                              <1>  %define %1.bit1.OnChanged DATABUSBITONCHANGED %1.bit1
  1172                              <1>  %define %1.bit2.OnChanged DATABUSBITONCHANGED %1.bit2
  1173                              <1>  %define %1.bit3.OnChanged DATABUSBITONCHANGED %1.bit3
  1174                              <1>  %define %1.bit4.OnChanged DATABUSBITONCHANGED %1.bit4
  1175                              <1>  %define %1.bit5.OnChanged DATABUSBITONCHANGED %1.bit5
  1176                              <1>  %define %1.bit6.OnChanged DATABUSBITONCHANGED %1.bit6
  1177                              <1>  %define %1.bit7.OnChanged DATABUSBITONCHANGED %1.bit7
  1178                              <1> 
  1179                              <1>  %define %1.bit0.OnSet DATABUSBITONSET %1.bit0
  1180                              <1>  %define %1.bit1.OnSet DATABUSBITONSET %1.bit1
  1181                              <1>  %define %1.bit2.OnSet DATABUSBITONSET %1.bit2
  1182                              <1>  %define %1.bit3.OnSet DATABUSBITONSET %1.bit3
  1183                              <1>  %define %1.bit4.OnSet DATABUSBITONSET %1.bit4
  1184                              <1>  %define %1.bit5.OnSet DATABUSBITONSET %1.bit5
  1185                              <1>  %define %1.bit6.OnSet DATABUSBITONSET %1.bit6
  1186                              <1>  %define %1.bit7.OnSet DATABUSBITONSET %1.bit7
  1187                              <1> 
  1188                              <1>  %define %1.bit0.OnReset DATABUSBITONRESET %1.bit0
  1189                              <1>  %define %1.bit1.OnReset DATABUSBITONRESET %1.bit1
  1190                              <1>  %define %1.bit2.OnReset DATABUSBITONRESET %1.bit2
  1191                              <1>  %define %1.bit3.OnReset DATABUSBITONRESET %1.bit3
  1192                              <1>  %define %1.bit4.OnReset DATABUSBITONRESET %1.bit4
  1193                              <1>  %define %1.bit5.OnReset DATABUSBITONRESET %1.bit5
  1194                              <1>  %define %1.bit6.OnReset DATABUSBITONRESET %1.bit6
  1195                              <1>  %define %1.bit7.OnReset DATABUSBITONRESET %1.bit7
  1196                              <1> 
  1197                              <1>  [section .data]
  1198                              <1> 
  1199                              <1>  %1: ISTRUC DATABUS_STRUC
  1200 00000024 [6400000000000000]  <1>  at DATABUS_STRUC.bit0, dq .BIT0
  1201 0000002C [A500000000000000]  <1>  at DATABUS_STRUC.bit1, dq .BIT1
  1202 00000034 [E600000000000000]  <1>  at DATABUS_STRUC.bit2, dq .BIT2
  1203 0000003C [2701000000000000]  <1>  at DATABUS_STRUC.bit3, dq .BIT3
  1204 00000044 [6801000000000000]  <1>  at DATABUS_STRUC.bit4, dq .BIT4
  1205 0000004C [A901000000000000]  <1>  at DATABUS_STRUC.bit5, dq .BIT5
  1206 00000054 [EA01000000000000]  <1>  at DATABUS_STRUC.bit6, dq .BIT6
  1207 0000005C [2B02000000000000]  <1>  at DATABUS_STRUC.bit7, dq .BIT7
  1208                              <1>  IEND
  1209                              <1> 
  1210                              <1> 
  1211                              <1>  BIT .BIT0
  1212                              <2> 
  1213                              <2>  %ifndef BITMACROS
  1214                              <2>  %define BITMACROS
  1215                              <2> 
  1216                              <2>  %macro BITSET 1
  1217                              <2>  mov rax, %1+BIT_STRUC.Set
  1218                              <2>  call QWORD [rax]
  1219                              <2>  %endmacro
  1220                              <2> 
  1221                              <2>  %macro BITRESET 1
  1222                              <2>  mov rax, %1+BIT_STRUC.Reset
  1223                              <2>  call QWORD [rax]
  1224                              <2>  %endmacro
  1225                              <2> 
  1226                              <2>  %macro BITINVERT 1
  1227                              <2>  mov rax, %1+BIT_STRUC.Invert
  1228                              <2>  call QWORD [rax]
  1229                              <2>  %endmacro
  1230                              <2> 
  1231                              <2>  %macro BITGET 1
  1232                              <2>  mov rax, %1+BIT_STRUC.Get
  1233                              <2>  call QWORD [rax]
  1234                              <2>  %endmacro
  1235                              <2> 
  1236                              <2>  %macro BITLOAD 1
  1237                              <2>  mov rax, %1+BIT_STRUC.Load
  1238                              <2>  call QWORD [rax]
  1239                              <2>  %endmacro
  1240                              <2> 
  1241                              <2>  %macro BITONCHANGED 1
  1242                              <2>  mov rax, %1+BIT_STRUC.OnChanged
  1243                              <2>  mov [rax], rdx
  1244                              <2>  %endmacro
  1245                              <2> 
  1246                              <2>  %macro BITONSET 1
  1247                              <2>  mov rax, %1+BIT_STRUC.OnSet
  1248                              <2>  mov [rax], rdx
  1249                              <2>  %endmacro
  1250                              <2> 
  1251                              <2>  %macro BITONRESET 1
  1252                              <2>  mov rax, %1+BIT_STRUC.OnReset
  1253                              <2>  mov [rax], rdx
  1254                              <2>  %endmacro
  1255                              <2> 
  1256                              <2>  %endif
  1257                              <2> 
  1258                              <2>  %define %1.ptr %1+BIT_STRUC.value
  1259                              <2>  %define %1.Set BITSET %1
  1260                              <2>  %define %1.Reset BITRESET %1
  1261                              <2>  %define %1.Invert BITINVERT %1
  1262                              <2>  %define %1.Get BITGET %1
  1263                              <2>  %define %1.Load BITLOAD %1
  1264                              <2>  %define %1.OnChanged BITONCHANGED %1
  1265                              <2>  %define %1.OnSet BITONSET %1
  1266                              <2>  %define %1.OnReset BITONRESET %1
  1267                              <2>  %define %1.value BYTE [%1+BIT_STRUC.value]
  1268                              <2> 
  1269                              <2>  [section .data]
  1270                              <2>  %1: ISTRUC BIT_STRUC
  1271 00000064 00                  <2>  at BIT_STRUC.value, db 0
  1272 00000065 [1400000000000000]  <2>  at BIT_STRUC.Set, dq BITSet
  1273 0000006D [0900000000000000]  <2>  at BIT_STRUC.Reset, dq BITReset
  1274 00000075 [2900000000000000]  <2>  at BIT_STRUC.Invert, dq BITInvert
  1275 0000007D [1F00000000000000]  <2>  at BIT_STRUC.Get, dq BITGet
  1276 00000085 [0000000000000000]  <2>  at BIT_STRUC.Load, dq BITLoad
  1277 0000008D 0000000000000000    <2>  at BIT_STRUC.OnChanged, dq 0
  1278 00000095 0000000000000000    <2>  at BIT_STRUC.OnSet, dq 0
  1279 0000009D 0000000000000000    <2>  at BIT_STRUC.OnReset, dq 0
  1280                              <2>  IEND
  1281                              <1>  BIT .BIT1
  1282                              <2> 
  1283                              <2>  %ifndef BITMACROS
  1284                              <2>  %define BITMACROS
  1285                              <2> 
  1286                              <2>  %macro BITSET 1
  1287                              <2>  mov rax, %1+BIT_STRUC.Set
  1288                              <2>  call QWORD [rax]
  1289                              <2>  %endmacro
  1290                              <2> 
  1291                              <2>  %macro BITRESET 1
  1292                              <2>  mov rax, %1+BIT_STRUC.Reset
  1293                              <2>  call QWORD [rax]
  1294                              <2>  %endmacro
  1295                              <2> 
  1296                              <2>  %macro BITINVERT 1
  1297                              <2>  mov rax, %1+BIT_STRUC.Invert
  1298                              <2>  call QWORD [rax]
  1299                              <2>  %endmacro
  1300                              <2> 
  1301                              <2>  %macro BITGET 1
  1302                              <2>  mov rax, %1+BIT_STRUC.Get
  1303                              <2>  call QWORD [rax]
  1304                              <2>  %endmacro
  1305                              <2> 
  1306                              <2>  %macro BITLOAD 1
  1307                              <2>  mov rax, %1+BIT_STRUC.Load
  1308                              <2>  call QWORD [rax]
  1309                              <2>  %endmacro
  1310                              <2> 
  1311                              <2>  %macro BITONCHANGED 1
  1312                              <2>  mov rax, %1+BIT_STRUC.OnChanged
  1313                              <2>  mov [rax], rdx
  1314                              <2>  %endmacro
  1315                              <2> 
  1316                              <2>  %macro BITONSET 1
  1317                              <2>  mov rax, %1+BIT_STRUC.OnSet
  1318                              <2>  mov [rax], rdx
  1319                              <2>  %endmacro
  1320                              <2> 
  1321                              <2>  %macro BITONRESET 1
  1322                              <2>  mov rax, %1+BIT_STRUC.OnReset
  1323                              <2>  mov [rax], rdx
  1324                              <2>  %endmacro
  1325                              <2> 
  1326                              <2>  %endif
  1327                              <2> 
  1328                              <2>  %define %1.ptr %1+BIT_STRUC.value
  1329                              <2>  %define %1.Set BITSET %1
  1330                              <2>  %define %1.Reset BITRESET %1
  1331                              <2>  %define %1.Invert BITINVERT %1
  1332                              <2>  %define %1.Get BITGET %1
  1333                              <2>  %define %1.Load BITLOAD %1
  1334                              <2>  %define %1.OnChanged BITONCHANGED %1
  1335                              <2>  %define %1.OnSet BITONSET %1
  1336                              <2>  %define %1.OnReset BITONRESET %1
  1337                              <2>  %define %1.value BYTE [%1+BIT_STRUC.value]
  1338                              <2> 
  1339                              <2>  [section .data]
  1340                              <2>  %1: ISTRUC BIT_STRUC
  1341 000000A5 00                  <2>  at BIT_STRUC.value, db 0
  1342 000000A6 [1400000000000000]  <2>  at BIT_STRUC.Set, dq BITSet
  1343 000000AE [0900000000000000]  <2>  at BIT_STRUC.Reset, dq BITReset
  1344 000000B6 [2900000000000000]  <2>  at BIT_STRUC.Invert, dq BITInvert
  1345 000000BE [1F00000000000000]  <2>  at BIT_STRUC.Get, dq BITGet
  1346 000000C6 [0000000000000000]  <2>  at BIT_STRUC.Load, dq BITLoad
  1347 000000CE 0000000000000000    <2>  at BIT_STRUC.OnChanged, dq 0
  1348 000000D6 0000000000000000    <2>  at BIT_STRUC.OnSet, dq 0
  1349 000000DE 0000000000000000    <2>  at BIT_STRUC.OnReset, dq 0
  1350                              <2>  IEND
  1351                              <1>  BIT .BIT2
  1352                              <2> 
  1353                              <2>  %ifndef BITMACROS
  1354                              <2>  %define BITMACROS
  1355                              <2> 
  1356                              <2>  %macro BITSET 1
  1357                              <2>  mov rax, %1+BIT_STRUC.Set
  1358                              <2>  call QWORD [rax]
  1359                              <2>  %endmacro
  1360                              <2> 
  1361                              <2>  %macro BITRESET 1
  1362                              <2>  mov rax, %1+BIT_STRUC.Reset
  1363                              <2>  call QWORD [rax]
  1364                              <2>  %endmacro
  1365                              <2> 
  1366                              <2>  %macro BITINVERT 1
  1367                              <2>  mov rax, %1+BIT_STRUC.Invert
  1368                              <2>  call QWORD [rax]
  1369                              <2>  %endmacro
  1370                              <2> 
  1371                              <2>  %macro BITGET 1
  1372                              <2>  mov rax, %1+BIT_STRUC.Get
  1373                              <2>  call QWORD [rax]
  1374                              <2>  %endmacro
  1375                              <2> 
  1376                              <2>  %macro BITLOAD 1
  1377                              <2>  mov rax, %1+BIT_STRUC.Load
  1378                              <2>  call QWORD [rax]
  1379                              <2>  %endmacro
  1380                              <2> 
  1381                              <2>  %macro BITONCHANGED 1
  1382                              <2>  mov rax, %1+BIT_STRUC.OnChanged
  1383                              <2>  mov [rax], rdx
  1384                              <2>  %endmacro
  1385                              <2> 
  1386                              <2>  %macro BITONSET 1
  1387                              <2>  mov rax, %1+BIT_STRUC.OnSet
  1388                              <2>  mov [rax], rdx
  1389                              <2>  %endmacro
  1390                              <2> 
  1391                              <2>  %macro BITONRESET 1
  1392                              <2>  mov rax, %1+BIT_STRUC.OnReset
  1393                              <2>  mov [rax], rdx
  1394                              <2>  %endmacro
  1395                              <2> 
  1396                              <2>  %endif
  1397                              <2> 
  1398                              <2>  %define %1.ptr %1+BIT_STRUC.value
  1399                              <2>  %define %1.Set BITSET %1
  1400                              <2>  %define %1.Reset BITRESET %1
  1401                              <2>  %define %1.Invert BITINVERT %1
  1402                              <2>  %define %1.Get BITGET %1
  1403                              <2>  %define %1.Load BITLOAD %1
  1404                              <2>  %define %1.OnChanged BITONCHANGED %1
  1405                              <2>  %define %1.OnSet BITONSET %1
  1406                              <2>  %define %1.OnReset BITONRESET %1
  1407                              <2>  %define %1.value BYTE [%1+BIT_STRUC.value]
  1408                              <2> 
  1409                              <2>  [section .data]
  1410                              <2>  %1: ISTRUC BIT_STRUC
  1411 000000E6 00                  <2>  at BIT_STRUC.value, db 0
  1412 000000E7 [1400000000000000]  <2>  at BIT_STRUC.Set, dq BITSet
  1413 000000EF [0900000000000000]  <2>  at BIT_STRUC.Reset, dq BITReset
  1414 000000F7 [2900000000000000]  <2>  at BIT_STRUC.Invert, dq BITInvert
  1415 000000FF [1F00000000000000]  <2>  at BIT_STRUC.Get, dq BITGet
  1416 00000107 [0000000000000000]  <2>  at BIT_STRUC.Load, dq BITLoad
  1417 0000010F 0000000000000000    <2>  at BIT_STRUC.OnChanged, dq 0
  1418 00000117 0000000000000000    <2>  at BIT_STRUC.OnSet, dq 0
  1419 0000011F 0000000000000000    <2>  at BIT_STRUC.OnReset, dq 0
  1420                              <2>  IEND
  1421                              <1>  BIT .BIT3
  1422                              <2> 
  1423                              <2>  %ifndef BITMACROS
  1424                              <2>  %define BITMACROS
  1425                              <2> 
  1426                              <2>  %macro BITSET 1
  1427                              <2>  mov rax, %1+BIT_STRUC.Set
  1428                              <2>  call QWORD [rax]
  1429                              <2>  %endmacro
  1430                              <2> 
  1431                              <2>  %macro BITRESET 1
  1432                              <2>  mov rax, %1+BIT_STRUC.Reset
  1433                              <2>  call QWORD [rax]
  1434                              <2>  %endmacro
  1435                              <2> 
  1436                              <2>  %macro BITINVERT 1
  1437                              <2>  mov rax, %1+BIT_STRUC.Invert
  1438                              <2>  call QWORD [rax]
  1439                              <2>  %endmacro
  1440                              <2> 
  1441                              <2>  %macro BITGET 1
  1442                              <2>  mov rax, %1+BIT_STRUC.Get
  1443                              <2>  call QWORD [rax]
  1444                              <2>  %endmacro
  1445                              <2> 
  1446                              <2>  %macro BITLOAD 1
  1447                              <2>  mov rax, %1+BIT_STRUC.Load
  1448                              <2>  call QWORD [rax]
  1449                              <2>  %endmacro
  1450                              <2> 
  1451                              <2>  %macro BITONCHANGED 1
  1452                              <2>  mov rax, %1+BIT_STRUC.OnChanged
  1453                              <2>  mov [rax], rdx
  1454                              <2>  %endmacro
  1455                              <2> 
  1456                              <2>  %macro BITONSET 1
  1457                              <2>  mov rax, %1+BIT_STRUC.OnSet
  1458                              <2>  mov [rax], rdx
  1459                              <2>  %endmacro
  1460                              <2> 
  1461                              <2>  %macro BITONRESET 1
  1462                              <2>  mov rax, %1+BIT_STRUC.OnReset
  1463                              <2>  mov [rax], rdx
  1464                              <2>  %endmacro
  1465                              <2> 
  1466                              <2>  %endif
  1467                              <2> 
  1468                              <2>  %define %1.ptr %1+BIT_STRUC.value
  1469                              <2>  %define %1.Set BITSET %1
  1470                              <2>  %define %1.Reset BITRESET %1
  1471                              <2>  %define %1.Invert BITINVERT %1
  1472                              <2>  %define %1.Get BITGET %1
  1473                              <2>  %define %1.Load BITLOAD %1
  1474                              <2>  %define %1.OnChanged BITONCHANGED %1
  1475                              <2>  %define %1.OnSet BITONSET %1
  1476                              <2>  %define %1.OnReset BITONRESET %1
  1477                              <2>  %define %1.value BYTE [%1+BIT_STRUC.value]
  1478                              <2> 
  1479                              <2>  [section .data]
  1480                              <2>  %1: ISTRUC BIT_STRUC
  1481 00000127 00                  <2>  at BIT_STRUC.value, db 0
  1482 00000128 [1400000000000000]  <2>  at BIT_STRUC.Set, dq BITSet
  1483 00000130 [0900000000000000]  <2>  at BIT_STRUC.Reset, dq BITReset
  1484 00000138 [2900000000000000]  <2>  at BIT_STRUC.Invert, dq BITInvert
  1485 00000140 [1F00000000000000]  <2>  at BIT_STRUC.Get, dq BITGet
  1486 00000148 [0000000000000000]  <2>  at BIT_STRUC.Load, dq BITLoad
  1487 00000150 0000000000000000    <2>  at BIT_STRUC.OnChanged, dq 0
  1488 00000158 0000000000000000    <2>  at BIT_STRUC.OnSet, dq 0
  1489 00000160 0000000000000000    <2>  at BIT_STRUC.OnReset, dq 0
  1490                              <2>  IEND
  1491                              <1>  BIT .BIT4
  1492                              <2> 
  1493                              <2>  %ifndef BITMACROS
  1494                              <2>  %define BITMACROS
  1495                              <2> 
  1496                              <2>  %macro BITSET 1
  1497                              <2>  mov rax, %1+BIT_STRUC.Set
  1498                              <2>  call QWORD [rax]
  1499                              <2>  %endmacro
  1500                              <2> 
  1501                              <2>  %macro BITRESET 1
  1502                              <2>  mov rax, %1+BIT_STRUC.Reset
  1503                              <2>  call QWORD [rax]
  1504                              <2>  %endmacro
  1505                              <2> 
  1506                              <2>  %macro BITINVERT 1
  1507                              <2>  mov rax, %1+BIT_STRUC.Invert
  1508                              <2>  call QWORD [rax]
  1509                              <2>  %endmacro
  1510                              <2> 
  1511                              <2>  %macro BITGET 1
  1512                              <2>  mov rax, %1+BIT_STRUC.Get
  1513                              <2>  call QWORD [rax]
  1514                              <2>  %endmacro
  1515                              <2> 
  1516                              <2>  %macro BITLOAD 1
  1517                              <2>  mov rax, %1+BIT_STRUC.Load
  1518                              <2>  call QWORD [rax]
  1519                              <2>  %endmacro
  1520                              <2> 
  1521                              <2>  %macro BITONCHANGED 1
  1522                              <2>  mov rax, %1+BIT_STRUC.OnChanged
  1523                              <2>  mov [rax], rdx
  1524                              <2>  %endmacro
  1525                              <2> 
  1526                              <2>  %macro BITONSET 1
  1527                              <2>  mov rax, %1+BIT_STRUC.OnSet
  1528                              <2>  mov [rax], rdx
  1529                              <2>  %endmacro
  1530                              <2> 
  1531                              <2>  %macro BITONRESET 1
  1532                              <2>  mov rax, %1+BIT_STRUC.OnReset
  1533                              <2>  mov [rax], rdx
  1534                              <2>  %endmacro
  1535                              <2> 
  1536                              <2>  %endif
  1537                              <2> 
  1538                              <2>  %define %1.ptr %1+BIT_STRUC.value
  1539                              <2>  %define %1.Set BITSET %1
  1540                              <2>  %define %1.Reset BITRESET %1
  1541                              <2>  %define %1.Invert BITINVERT %1
  1542                              <2>  %define %1.Get BITGET %1
  1543                              <2>  %define %1.Load BITLOAD %1
  1544                              <2>  %define %1.OnChanged BITONCHANGED %1
  1545                              <2>  %define %1.OnSet BITONSET %1
  1546                              <2>  %define %1.OnReset BITONRESET %1
  1547                              <2>  %define %1.value BYTE [%1+BIT_STRUC.value]
  1548                              <2> 
  1549                              <2>  [section .data]
  1550                              <2>  %1: ISTRUC BIT_STRUC
  1551 00000168 00                  <2>  at BIT_STRUC.value, db 0
  1552 00000169 [1400000000000000]  <2>  at BIT_STRUC.Set, dq BITSet
  1553 00000171 [0900000000000000]  <2>  at BIT_STRUC.Reset, dq BITReset
  1554 00000179 [2900000000000000]  <2>  at BIT_STRUC.Invert, dq BITInvert
  1555 00000181 [1F00000000000000]  <2>  at BIT_STRUC.Get, dq BITGet
  1556 00000189 [0000000000000000]  <2>  at BIT_STRUC.Load, dq BITLoad
  1557 00000191 0000000000000000    <2>  at BIT_STRUC.OnChanged, dq 0
  1558 00000199 0000000000000000    <2>  at BIT_STRUC.OnSet, dq 0
  1559 000001A1 0000000000000000    <2>  at BIT_STRUC.OnReset, dq 0
  1560                              <2>  IEND
  1561                              <1>  BIT .BIT5
  1562                              <2> 
  1563                              <2>  %ifndef BITMACROS
  1564                              <2>  %define BITMACROS
  1565                              <2> 
  1566                              <2>  %macro BITSET 1
  1567                              <2>  mov rax, %1+BIT_STRUC.Set
  1568                              <2>  call QWORD [rax]
  1569                              <2>  %endmacro
  1570                              <2> 
  1571                              <2>  %macro BITRESET 1
  1572                              <2>  mov rax, %1+BIT_STRUC.Reset
  1573                              <2>  call QWORD [rax]
  1574                              <2>  %endmacro
  1575                              <2> 
  1576                              <2>  %macro BITINVERT 1
  1577                              <2>  mov rax, %1+BIT_STRUC.Invert
  1578                              <2>  call QWORD [rax]
  1579                              <2>  %endmacro
  1580                              <2> 
  1581                              <2>  %macro BITGET 1
  1582                              <2>  mov rax, %1+BIT_STRUC.Get
  1583                              <2>  call QWORD [rax]
  1584                              <2>  %endmacro
  1585                              <2> 
  1586                              <2>  %macro BITLOAD 1
  1587                              <2>  mov rax, %1+BIT_STRUC.Load
  1588                              <2>  call QWORD [rax]
  1589                              <2>  %endmacro
  1590                              <2> 
  1591                              <2>  %macro BITONCHANGED 1
  1592                              <2>  mov rax, %1+BIT_STRUC.OnChanged
  1593                              <2>  mov [rax], rdx
  1594                              <2>  %endmacro
  1595                              <2> 
  1596                              <2>  %macro BITONSET 1
  1597                              <2>  mov rax, %1+BIT_STRUC.OnSet
  1598                              <2>  mov [rax], rdx
  1599                              <2>  %endmacro
  1600                              <2> 
  1601                              <2>  %macro BITONRESET 1
  1602                              <2>  mov rax, %1+BIT_STRUC.OnReset
  1603                              <2>  mov [rax], rdx
  1604                              <2>  %endmacro
  1605                              <2> 
  1606                              <2>  %endif
  1607                              <2> 
  1608                              <2>  %define %1.ptr %1+BIT_STRUC.value
  1609                              <2>  %define %1.Set BITSET %1
  1610                              <2>  %define %1.Reset BITRESET %1
  1611                              <2>  %define %1.Invert BITINVERT %1
  1612                              <2>  %define %1.Get BITGET %1
  1613                              <2>  %define %1.Load BITLOAD %1
  1614                              <2>  %define %1.OnChanged BITONCHANGED %1
  1615                              <2>  %define %1.OnSet BITONSET %1
  1616                              <2>  %define %1.OnReset BITONRESET %1
  1617                              <2>  %define %1.value BYTE [%1+BIT_STRUC.value]
  1618                              <2> 
  1619                              <2>  [section .data]
  1620                              <2>  %1: ISTRUC BIT_STRUC
  1621 000001A9 00                  <2>  at BIT_STRUC.value, db 0
  1622 000001AA [1400000000000000]  <2>  at BIT_STRUC.Set, dq BITSet
  1623 000001B2 [0900000000000000]  <2>  at BIT_STRUC.Reset, dq BITReset
  1624 000001BA [2900000000000000]  <2>  at BIT_STRUC.Invert, dq BITInvert
  1625 000001C2 [1F00000000000000]  <2>  at BIT_STRUC.Get, dq BITGet
  1626 000001CA [0000000000000000]  <2>  at BIT_STRUC.Load, dq BITLoad
  1627 000001D2 0000000000000000    <2>  at BIT_STRUC.OnChanged, dq 0
  1628 000001DA 0000000000000000    <2>  at BIT_STRUC.OnSet, dq 0
  1629 000001E2 0000000000000000    <2>  at BIT_STRUC.OnReset, dq 0
  1630                              <2>  IEND
  1631                              <1>  BIT .BIT6
  1632                              <2> 
  1633                              <2>  %ifndef BITMACROS
  1634                              <2>  %define BITMACROS
  1635                              <2> 
  1636                              <2>  %macro BITSET 1
  1637                              <2>  mov rax, %1+BIT_STRUC.Set
  1638                              <2>  call QWORD [rax]
  1639                              <2>  %endmacro
  1640                              <2> 
  1641                              <2>  %macro BITRESET 1
  1642                              <2>  mov rax, %1+BIT_STRUC.Reset
  1643                              <2>  call QWORD [rax]
  1644                              <2>  %endmacro
  1645                              <2> 
  1646                              <2>  %macro BITINVERT 1
  1647                              <2>  mov rax, %1+BIT_STRUC.Invert
  1648                              <2>  call QWORD [rax]
  1649                              <2>  %endmacro
  1650                              <2> 
  1651                              <2>  %macro BITGET 1
  1652                              <2>  mov rax, %1+BIT_STRUC.Get
  1653                              <2>  call QWORD [rax]
  1654                              <2>  %endmacro
  1655                              <2> 
  1656                              <2>  %macro BITLOAD 1
  1657                              <2>  mov rax, %1+BIT_STRUC.Load
  1658                              <2>  call QWORD [rax]
  1659                              <2>  %endmacro
  1660                              <2> 
  1661                              <2>  %macro BITONCHANGED 1
  1662                              <2>  mov rax, %1+BIT_STRUC.OnChanged
  1663                              <2>  mov [rax], rdx
  1664                              <2>  %endmacro
  1665                              <2> 
  1666                              <2>  %macro BITONSET 1
  1667                              <2>  mov rax, %1+BIT_STRUC.OnSet
  1668                              <2>  mov [rax], rdx
  1669                              <2>  %endmacro
  1670                              <2> 
  1671                              <2>  %macro BITONRESET 1
  1672                              <2>  mov rax, %1+BIT_STRUC.OnReset
  1673                              <2>  mov [rax], rdx
  1674                              <2>  %endmacro
  1675                              <2> 
  1676                              <2>  %endif
  1677                              <2> 
  1678                              <2>  %define %1.ptr %1+BIT_STRUC.value
  1679                              <2>  %define %1.Set BITSET %1
  1680                              <2>  %define %1.Reset BITRESET %1
  1681                              <2>  %define %1.Invert BITINVERT %1
  1682                              <2>  %define %1.Get BITGET %1
  1683                              <2>  %define %1.Load BITLOAD %1
  1684                              <2>  %define %1.OnChanged BITONCHANGED %1
  1685                              <2>  %define %1.OnSet BITONSET %1
  1686                              <2>  %define %1.OnReset BITONRESET %1
  1687                              <2>  %define %1.value BYTE [%1+BIT_STRUC.value]
  1688                              <2> 
  1689                              <2>  [section .data]
  1690                              <2>  %1: ISTRUC BIT_STRUC
  1691 000001EA 00                  <2>  at BIT_STRUC.value, db 0
  1692 000001EB [1400000000000000]  <2>  at BIT_STRUC.Set, dq BITSet
  1693 000001F3 [0900000000000000]  <2>  at BIT_STRUC.Reset, dq BITReset
  1694 000001FB [2900000000000000]  <2>  at BIT_STRUC.Invert, dq BITInvert
  1695 00000203 [1F00000000000000]  <2>  at BIT_STRUC.Get, dq BITGet
  1696 0000020B [0000000000000000]  <2>  at BIT_STRUC.Load, dq BITLoad
  1697 00000213 0000000000000000    <2>  at BIT_STRUC.OnChanged, dq 0
  1698 0000021B 0000000000000000    <2>  at BIT_STRUC.OnSet, dq 0
  1699 00000223 0000000000000000    <2>  at BIT_STRUC.OnReset, dq 0
  1700                              <2>  IEND
  1701                              <1>  BIT .BIT7
  1702                              <2> 
  1703                              <2>  %ifndef BITMACROS
  1704                              <2>  %define BITMACROS
  1705                              <2> 
  1706                              <2>  %macro BITSET 1
  1707                              <2>  mov rax, %1+BIT_STRUC.Set
  1708                              <2>  call QWORD [rax]
  1709                              <2>  %endmacro
  1710                              <2> 
  1711                              <2>  %macro BITRESET 1
  1712                              <2>  mov rax, %1+BIT_STRUC.Reset
  1713                              <2>  call QWORD [rax]
  1714                              <2>  %endmacro
  1715                              <2> 
  1716                              <2>  %macro BITINVERT 1
  1717                              <2>  mov rax, %1+BIT_STRUC.Invert
  1718                              <2>  call QWORD [rax]
  1719                              <2>  %endmacro
  1720                              <2> 
  1721                              <2>  %macro BITGET 1
  1722                              <2>  mov rax, %1+BIT_STRUC.Get
  1723                              <2>  call QWORD [rax]
  1724                              <2>  %endmacro
  1725                              <2> 
  1726                              <2>  %macro BITLOAD 1
  1727                              <2>  mov rax, %1+BIT_STRUC.Load
  1728                              <2>  call QWORD [rax]
  1729                              <2>  %endmacro
  1730                              <2> 
  1731                              <2>  %macro BITONCHANGED 1
  1732                              <2>  mov rax, %1+BIT_STRUC.OnChanged
  1733                              <2>  mov [rax], rdx
  1734                              <2>  %endmacro
  1735                              <2> 
  1736                              <2>  %macro BITONSET 1
  1737                              <2>  mov rax, %1+BIT_STRUC.OnSet
  1738                              <2>  mov [rax], rdx
  1739                              <2>  %endmacro
  1740                              <2> 
  1741                              <2>  %macro BITONRESET 1
  1742                              <2>  mov rax, %1+BIT_STRUC.OnReset
  1743                              <2>  mov [rax], rdx
  1744                              <2>  %endmacro
  1745                              <2> 
  1746                              <2>  %endif
  1747                              <2> 
  1748                              <2>  %define %1.ptr %1+BIT_STRUC.value
  1749                              <2>  %define %1.Set BITSET %1
  1750                              <2>  %define %1.Reset BITRESET %1
  1751                              <2>  %define %1.Invert BITINVERT %1
  1752                              <2>  %define %1.Get BITGET %1
  1753                              <2>  %define %1.Load BITLOAD %1
  1754                              <2>  %define %1.OnChanged BITONCHANGED %1
  1755                              <2>  %define %1.OnSet BITONSET %1
  1756                              <2>  %define %1.OnReset BITONRESET %1
  1757                              <2>  %define %1.value BYTE [%1+BIT_STRUC.value]
  1758                              <2> 
  1759                              <2>  [section .data]
  1760                              <2>  %1: ISTRUC BIT_STRUC
  1761 0000022B 00                  <2>  at BIT_STRUC.value, db 0
  1762 0000022C [1400000000000000]  <2>  at BIT_STRUC.Set, dq BITSet
  1763 00000234 [0900000000000000]  <2>  at BIT_STRUC.Reset, dq BITReset
  1764 0000023C [2900000000000000]  <2>  at BIT_STRUC.Invert, dq BITInvert
  1765 00000244 [1F00000000000000]  <2>  at BIT_STRUC.Get, dq BITGet
  1766 0000024C [0000000000000000]  <2>  at BIT_STRUC.Load, dq BITLoad
  1767 00000254 0000000000000000    <2>  at BIT_STRUC.OnChanged, dq 0
  1768 0000025C 0000000000000000    <2>  at BIT_STRUC.OnSet, dq 0
  1769 00000264 0000000000000000    <2>  at BIT_STRUC.OnReset, dq 0
  1770                              <2>  IEND
  1771                              <1> 
  1772                                      
  1773                                  section .text
  1774                                      global _start
  1775                                  _start:
  1776                                     
  1777 00000069 48B8-                       mov     rax, adresbus
  1778 0000006B [2400000000000000] 
  1779 00000073 48B8-                       mov     rax, adresbus.bit0
  1780 00000075 [2400000000000000] 
  1781 0000007D 488B0425[24000000]          mov     rax, adresbus.bit0.ptr
  1782 00000085 8A0425[64000000]            mov     al, adresbus.bit0.value
  1783                                      
  1784 0000008C 48B8-                       mov     rax, adresbus.bit1
  1785 0000008E [2C00000000000000] 
  1786 00000096 488B0425[2C000000]          mov     rax, adresbus.bit1.ptr
  1787 0000009E 8A0425[A5000000]            mov     al, adresbus.bit1.value
  1788                                      
  1789 000000A5 48B8-                       mov     rax, adresbus.bit2
  1790 000000A7 [3400000000000000] 
  1791 000000AF 488B0425[34000000]          mov     rax, adresbus.bit2.ptr
  1792 000000B7 8A0425[E6000000]            mov     al, adresbus.bit2.value
  1793                                      
  1794 000000BE 48B8-                       mov     rax, adresbus.bit3
  1795 000000C0 [3C00000000000000] 
  1796 000000C8 488B0425[3C000000]          mov     rax, adresbus.bit3.ptr
  1797 000000D0 8A0425[27010000]            mov     al, adresbus.bit3.value
  1798                                      
  1799 000000D7 48B8-                       mov     rax, adresbus.bit4
  1800 000000D9 [4400000000000000] 
  1801 000000E1 488B0425[44000000]          mov     rax, adresbus.bit4.ptr
  1802 000000E9 8A0425[68010000]            mov     al, adresbus.bit4.value
  1803                                      
  1804 000000F0 48B8-                       mov     rax, adresbus.bit5
  1805 000000F2 [4C00000000000000] 
  1806 000000FA 488B0425[4C000000]          mov     rax, adresbus.bit5.ptr
  1807 00000102 8A0425[A9010000]            mov     al, adresbus.bit5.value
  1808                                      
  1809 00000109 48B8-                       mov     rax, adresbus.bit6
  1810 0000010B [5400000000000000] 
  1811 00000113 488B0425[54000000]          mov     rax, adresbus.bit6.ptr
  1812 0000011B 8A0425[EA010000]            mov     al, adresbus.bit6.value
  1813                                      
  1814 00000122 48B8-                       mov     rax, adresbus.bit7
  1815 00000124 [5C00000000000000] 
  1816 0000012C 488B0425[5C000000]          mov     rax, adresbus.bit7.ptr
  1817 00000134 8A0425[2B020000]            mov     al, adresbus.bit7.value
  1818                                        
  1819 0000013B 8A0425[64000000]            mov     al, adresbus.bit0.value
  1820 00000142 8A0425[A5000000]            mov     al, adresbus.bit1.value
  1821 00000149 8A0425[E6000000]            mov     al, adresbus.bit2.value
  1822 00000150 8A0425[27010000]            mov     al, adresbus.bit3.value
  1823 00000157 8A0425[68010000]            mov     al, adresbus.bit4.value
  1824 0000015E 8A0425[A9010000]            mov     al, adresbus.bit5.value
  1825 00000165 8A0425[EA010000]            mov     al, adresbus.bit6.value
  1826 0000016C 8A0425[2B020000]            mov     al, adresbus.bit7.value
  1827                                      
  1828 00000173 48BA-                       mov     rdx, OnBit0Set
  1829 00000175 [5807000000000000] 
  1830                                      adresbus.bit0.OnSet
  1831 0000017D 48B8-               <1>  mov rax, %1
  1832 0000017F [2400000000000000]  <1>
  1833 00000187 488B00              <1>  mov rax, [rax]
  1834 0000018A 4883C001            <1>  add rax, BIT_STRUC.Set
  1835 0000018E 488910              <1>  mov [rax], rdx
  1836 00000191 48BA-                       mov     rdx, OnBit1Set
  1837 00000193 [5C07000000000000] 
  1838                                      adresbus.bit1.OnSet
  1839 0000019B 48B8-               <1>  mov rax, %1
  1840 0000019D [2C00000000000000]  <1>
  1841 000001A5 488B00              <1>  mov rax, [rax]
  1842 000001A8 4883C001            <1>  add rax, BIT_STRUC.Set
  1843 000001AC 488910              <1>  mov [rax], rdx
  1844 000001AF 48BA-                       mov     rdx, OnBit2Set
  1845 000001B1 [6007000000000000] 
  1846                                      adresbus.bit2.OnSet
  1847 000001B9 48B8-               <1>  mov rax, %1
  1848 000001BB [3400000000000000]  <1>
  1849 000001C3 488B00              <1>  mov rax, [rax]
  1850 000001C6 4883C001            <1>  add rax, BIT_STRUC.Set
  1851 000001CA 488910              <1>  mov [rax], rdx
  1852 000001CD 48BA-                       mov     rdx, OnBit3Set
  1853 000001CF [6407000000000000] 
  1854                                      adresbus.bit3.OnSet
  1855 000001D7 48B8-               <1>  mov rax, %1
  1856 000001D9 [3C00000000000000]  <1>
  1857 000001E1 488B00              <1>  mov rax, [rax]
  1858 000001E4 4883C001            <1>  add rax, BIT_STRUC.Set
  1859 000001E8 488910              <1>  mov [rax], rdx
  1860 000001EB 48BA-                       mov     rdx, OnBit4Set
  1861 000001ED [6807000000000000] 
  1862                                      adresbus.bit4.OnSet
  1863 000001F5 48B8-               <1>  mov rax, %1
  1864 000001F7 [4400000000000000]  <1>
  1865 000001FF 488B00              <1>  mov rax, [rax]
  1866 00000202 4883C001            <1>  add rax, BIT_STRUC.Set
  1867 00000206 488910              <1>  mov [rax], rdx
  1868 00000209 48BA-                       mov     rdx, OnBit5Set
  1869 0000020B [6C07000000000000] 
  1870                                      adresbus.bit5.OnSet
  1871 00000213 48B8-               <1>  mov rax, %1
  1872 00000215 [4C00000000000000]  <1>
  1873 0000021D 488B00              <1>  mov rax, [rax]
  1874 00000220 4883C001            <1>  add rax, BIT_STRUC.Set
  1875 00000224 488910              <1>  mov [rax], rdx
  1876 00000227 48BA-                       mov     rdx, OnBit6Set
  1877 00000229 [7007000000000000] 
  1878                                      adresbus.bit6.OnSet
  1879 00000231 48B8-               <1>  mov rax, %1
  1880 00000233 [5400000000000000]  <1>
  1881 0000023B 488B00              <1>  mov rax, [rax]
  1882 0000023E 4883C001            <1>  add rax, BIT_STRUC.Set
  1883 00000242 488910              <1>  mov [rax], rdx
  1884 00000245 48BA-                       mov     rdx, OnBit7Set
  1885 00000247 [7407000000000000] 
  1886                                      adresbus.bit7.OnSet
  1887 0000024F 48B8-               <1>  mov rax, %1
  1888 00000251 [5C00000000000000]  <1>
  1889 00000259 488B00              <1>  mov rax, [rax]
  1890 0000025C 4883C001            <1>  add rax, BIT_STRUC.Set
  1891 00000260 488910              <1>  mov [rax], rdx
  1892                                  
  1893 00000263 48BA-                       mov     rdx, OnBit0Reset
  1894 00000265 [8007000000000000] 
  1895                                      adresbus.bit0.OnReset
  1896 0000026D 48B8-               <1>  mov rax, %1
  1897 0000026F [2400000000000000]  <1>
  1898 00000277 488B00              <1>  mov rax, [rax]
  1899 0000027A 4883C039            <1>  add rax, BIT_STRUC.OnReset
  1900 0000027E 488910              <1>  mov [rax], rdx
  1901 00000281 48BA-                       mov     rdx, OnBit1Reset
  1902 00000283 [8407000000000000] 
  1903                                      adresbus.bit1.OnReset
  1904 0000028B 48B8-               <1>  mov rax, %1
  1905 0000028D [2C00000000000000]  <1>
  1906 00000295 488B00              <1>  mov rax, [rax]
  1907 00000298 4883C039            <1>  add rax, BIT_STRUC.OnReset
  1908 0000029C 488910              <1>  mov [rax], rdx
  1909 0000029F 48BA-                       mov     rdx, OnBit2Reset
  1910 000002A1 [8807000000000000] 
  1911                                      adresbus.bit2.OnReset
  1912 000002A9 48B8-               <1>  mov rax, %1
  1913 000002AB [3400000000000000]  <1>
  1914 000002B3 488B00              <1>  mov rax, [rax]
  1915 000002B6 4883C039            <1>  add rax, BIT_STRUC.OnReset
  1916 000002BA 488910              <1>  mov [rax], rdx
  1917 000002BD 48BA-                       mov     rdx, OnBit3Reset
  1918 000002BF [8C07000000000000] 
  1919                                      adresbus.bit3.OnReset
  1920 000002C7 48B8-               <1>  mov rax, %1
  1921 000002C9 [3C00000000000000]  <1>
  1922 000002D1 488B00              <1>  mov rax, [rax]
  1923 000002D4 4883C039            <1>  add rax, BIT_STRUC.OnReset
  1924 000002D8 488910              <1>  mov [rax], rdx
  1925 000002DB 48BA-                       mov     rdx, OnBit4Reset
  1926 000002DD [9007000000000000] 
  1927                                      adresbus.bit4.OnReset
  1928 000002E5 48B8-               <1>  mov rax, %1
  1929 000002E7 [4400000000000000]  <1>
  1930 000002EF 488B00              <1>  mov rax, [rax]
  1931 000002F2 4883C039            <1>  add rax, BIT_STRUC.OnReset
  1932 000002F6 488910              <1>  mov [rax], rdx
  1933 000002F9 48BA-                       mov     rdx, OnBit5Reset
  1934 000002FB [9407000000000000] 
  1935                                      adresbus.bit5.OnReset
  1936 00000303 48B8-               <1>  mov rax, %1
  1937 00000305 [4C00000000000000]  <1>
  1938 0000030D 488B00              <1>  mov rax, [rax]
  1939 00000310 4883C039            <1>  add rax, BIT_STRUC.OnReset
  1940 00000314 488910              <1>  mov [rax], rdx
  1941 00000317 48BA-                       mov     rdx, OnBit6Reset
  1942 00000319 [9807000000000000] 
  1943                                      adresbus.bit6.OnReset
  1944 00000321 48B8-               <1>  mov rax, %1
  1945 00000323 [5400000000000000]  <1>
  1946 0000032B 488B00              <1>  mov rax, [rax]
  1947 0000032E 4883C039            <1>  add rax, BIT_STRUC.OnReset
  1948 00000332 488910              <1>  mov [rax], rdx
  1949 00000335 48BA-                       mov     rdx, OnBit7Reset
  1950 00000337 [9C07000000000000] 
  1951                                      adresbus.bit7.OnReset
  1952 0000033F 48B8-               <1>  mov rax, %1
  1953 00000341 [5C00000000000000]  <1>
  1954 00000349 488B00              <1>  mov rax, [rax]
  1955 0000034C 4883C039            <1>  add rax, BIT_STRUC.OnReset
  1956 00000350 488910              <1>  mov [rax], rdx
  1957                                  
  1958 00000353 48BA-                       mov     rdx, OnBit0Changed
  1959 00000355 [A807000000000000] 
  1960                                      adresbus.bit0.OnChanged
  1961 0000035D 48B8-               <1>  mov rax, %1
  1962 0000035F [2400000000000000]  <1>
  1963 00000367 488B00              <1>  mov rax, [rax]
  1964 0000036A 4883C029            <1>  add rax, BIT_STRUC.OnChanged
  1965 0000036E 488910              <1>  mov [rax], rdx
  1966 00000371 48BA-                       mov     rdx, OnBit1Changed
  1967 00000373 [AC07000000000000] 
  1968                                      adresbus.bit1.OnChanged
  1969 0000037B 48B8-               <1>  mov rax, %1
  1970 0000037D [2C00000000000000]  <1>
  1971 00000385 488B00              <1>  mov rax, [rax]
  1972 00000388 4883C029            <1>  add rax, BIT_STRUC.OnChanged
  1973 0000038C 488910              <1>  mov [rax], rdx
  1974 0000038F 48BA-                       mov     rdx, OnBit2Changed
  1975 00000391 [B007000000000000] 
  1976                                      adresbus.bit2.OnChanged
  1977 00000399 48B8-               <1>  mov rax, %1
  1978 0000039B [3400000000000000]  <1>
  1979 000003A3 488B00              <1>  mov rax, [rax]
  1980 000003A6 4883C029            <1>  add rax, BIT_STRUC.OnChanged
  1981 000003AA 488910              <1>  mov [rax], rdx
  1982 000003AD 48BA-                       mov     rdx, OnBit3Changed
  1983 000003AF [B407000000000000] 
  1984                                      adresbus.bit3.OnChanged
  1985 000003B7 48B8-               <1>  mov rax, %1
  1986 000003B9 [3C00000000000000]  <1>
  1987 000003C1 488B00              <1>  mov rax, [rax]
  1988 000003C4 4883C029            <1>  add rax, BIT_STRUC.OnChanged
  1989 000003C8 488910              <1>  mov [rax], rdx
  1990 000003CB 48BA-                       mov     rdx, OnBit4Changed
  1991 000003CD [B807000000000000] 
  1992                                      adresbus.bit4.OnChanged
  1993 000003D5 48B8-               <1>  mov rax, %1
  1994 000003D7 [4400000000000000]  <1>
  1995 000003DF 488B00              <1>  mov rax, [rax]
  1996 000003E2 4883C029            <1>  add rax, BIT_STRUC.OnChanged
  1997 000003E6 488910              <1>  mov [rax], rdx
  1998 000003E9 48BA-                       mov     rdx, OnBit5Changed
  1999 000003EB [BC07000000000000] 
  2000                                      adresbus.bit5.OnChanged
  2001 000003F3 48B8-               <1>  mov rax, %1
  2002 000003F5 [4C00000000000000]  <1>
  2003 000003FD 488B00              <1>  mov rax, [rax]
  2004 00000400 4883C029            <1>  add rax, BIT_STRUC.OnChanged
  2005 00000404 488910              <1>  mov [rax], rdx
  2006 00000407 48BA-                       mov     rdx, OnBit6Changed
  2007 00000409 [C007000000000000] 
  2008                                      adresbus.bit6.OnChanged
  2009 00000411 48B8-               <1>  mov rax, %1
  2010 00000413 [5400000000000000]  <1>
  2011 0000041B 488B00              <1>  mov rax, [rax]
  2012 0000041E 4883C029            <1>  add rax, BIT_STRUC.OnChanged
  2013 00000422 488910              <1>  mov [rax], rdx
  2014 00000425 48BA-                       mov     rdx, OnBit7Changed
  2015 00000427 [C407000000000000] 
  2016                                      adresbus.bit7.OnChanged
  2017 0000042F 48B8-               <1>  mov rax, %1
  2018 00000431 [5C00000000000000]  <1>
  2019 00000439 488B00              <1>  mov rax, [rax]
  2020 0000043C 4883C029            <1>  add rax, BIT_STRUC.OnChanged
  2021 00000440 488910              <1>  mov [rax], rdx
  2022                                      
  2023                                      adresbus.bit0.Set
  2024 00000443 48B8-               <1>  mov rax, %1
  2025 00000445 [2400000000000000]  <1>
  2026 0000044D 488B00              <1>  mov rax, [rax]
  2027 00000450 4883C001            <1>  add rax, BIT_STRUC.Set
  2028 00000454 FF10                <1>  call [rax]
  2029                                      adresbus.bit0.Reset
  2030 00000456 48B8-               <1>  mov rax, %1
  2031 00000458 [2400000000000000]  <1>
  2032 00000460 488B00              <1>  mov rax, [rax]
  2033 00000463 4883C009            <1>  add rax, BIT_STRUC.Reset
  2034 00000467 FF10                <1>  call QWORD [rax]
  2035                                      adresbus.bit0.Invert
  2036 00000469 48B8-               <1>  mov rax, %1
  2037 0000046B [2400000000000000]  <1>
  2038 00000473 488B00              <1>  mov rax, [rax]
  2039 00000476 4883C011            <1>  add rax, BIT_STRUC.Invert
  2040 0000047A FF10                <1>  call QWORD [rax]
  2041                                      adresbus.bit0.Get
  2042 0000047C 48B8-               <1>  mov rax, %1
  2043 0000047E [2400000000000000]  <1>
  2044 00000486 488B00              <1>  mov rax, [rax]
  2045 00000489 4883C019            <1>  add rax, BIT_STRUC.Get
  2046 0000048D FF10                <1>  call QWORD [rax]
  2047                                      adresbus.bit1.Load
  2048 0000048F 48B8-               <1>  mov rax, %1
  2049 00000491 [2C00000000000000]  <1>
  2050 00000499 488B00              <1>  mov rax, [rax]
  2051 0000049C 4883C021            <1>  add rax, BIT_STRUC.Load
  2052 000004A0 FF10                <1>  call QWORD [rax]
  2053                                      
  2054                                      adresbus.bit1.Set
  2055 000004A2 48B8-               <1>  mov rax, %1
  2056 000004A4 [2C00000000000000]  <1>
  2057 000004AC 488B00              <1>  mov rax, [rax]
  2058 000004AF 4883C001            <1>  add rax, BIT_STRUC.Set
  2059 000004B3 FF10                <1>  call [rax]
  2060                                      adresbus.bit1.Reset
  2061 000004B5 48B8-               <1>  mov rax, %1
  2062 000004B7 [2C00000000000000]  <1>
  2063 000004BF 488B00              <1>  mov rax, [rax]
  2064 000004C2 4883C009            <1>  add rax, BIT_STRUC.Reset
  2065 000004C6 FF10                <1>  call QWORD [rax]
  2066                                      adresbus.bit1.Invert
  2067 000004C8 48B8-               <1>  mov rax, %1
  2068 000004CA [2C00000000000000]  <1>
  2069 000004D2 488B00              <1>  mov rax, [rax]
  2070 000004D5 4883C011            <1>  add rax, BIT_STRUC.Invert
  2071 000004D9 FF10                <1>  call QWORD [rax]
  2072                                      adresbus.bit1.Get
  2073 000004DB 48B8-               <1>  mov rax, %1
  2074 000004DD [2C00000000000000]  <1>
  2075 000004E5 488B00              <1>  mov rax, [rax]
  2076 000004E8 4883C019            <1>  add rax, BIT_STRUC.Get
  2077 000004EC FF10                <1>  call QWORD [rax]
  2078                                      adresbus.bit2.Load
  2079 000004EE 48B8-               <1>  mov rax, %1
  2080 000004F0 [3400000000000000]  <1>
  2081 000004F8 488B00              <1>  mov rax, [rax]
  2082 000004FB 4883C021            <1>  add rax, BIT_STRUC.Load
  2083 000004FF FF10                <1>  call QWORD [rax]
  2084                                  
  2085                                      adresbus.bit2.Set
  2086 00000501 48B8-               <1>  mov rax, %1
  2087 00000503 [3400000000000000]  <1>
  2088 0000050B 488B00              <1>  mov rax, [rax]
  2089 0000050E 4883C001            <1>  add rax, BIT_STRUC.Set
  2090 00000512 FF10                <1>  call [rax]
  2091                                      adresbus.bit2.Reset
  2092 00000514 48B8-               <1>  mov rax, %1
  2093 00000516 [3400000000000000]  <1>
  2094 0000051E 488B00              <1>  mov rax, [rax]
  2095 00000521 4883C009            <1>  add rax, BIT_STRUC.Reset
  2096 00000525 FF10                <1>  call QWORD [rax]
  2097                                      adresbus.bit2.Invert
  2098 00000527 48B8-               <1>  mov rax, %1
  2099 00000529 [3400000000000000]  <1>
  2100 00000531 488B00              <1>  mov rax, [rax]
  2101 00000534 4883C011            <1>  add rax, BIT_STRUC.Invert
  2102 00000538 FF10                <1>  call QWORD [rax]
  2103                                      adresbus.bit2.Get
  2104 0000053A 48B8-               <1>  mov rax, %1
  2105 0000053C [3400000000000000]  <1>
  2106 00000544 488B00              <1>  mov rax, [rax]
  2107 00000547 4883C019            <1>  add rax, BIT_STRUC.Get
  2108 0000054B FF10                <1>  call QWORD [rax]
  2109                                      adresbus.bit3.Load
  2110 0000054D 48B8-               <1>  mov rax, %1
  2111 0000054F [3C00000000000000]  <1>
  2112 00000557 488B00              <1>  mov rax, [rax]
  2113 0000055A 4883C021            <1>  add rax, BIT_STRUC.Load
  2114 0000055E FF10                <1>  call QWORD [rax]
  2115                                  
  2116                                      adresbus.bit3.Set
  2117 00000560 48B8-               <1>  mov rax, %1
  2118 00000562 [3C00000000000000]  <1>
  2119 0000056A 488B00              <1>  mov rax, [rax]
  2120 0000056D 4883C001            <1>  add rax, BIT_STRUC.Set
  2121 00000571 FF10                <1>  call [rax]
  2122                                      adresbus.bit3.Reset
  2123 00000573 48B8-               <1>  mov rax, %1
  2124 00000575 [3C00000000000000]  <1>
  2125 0000057D 488B00              <1>  mov rax, [rax]
  2126 00000580 4883C009            <1>  add rax, BIT_STRUC.Reset
  2127 00000584 FF10                <1>  call QWORD [rax]
  2128                                      adresbus.bit3.Invert
  2129 00000586 48B8-               <1>  mov rax, %1
  2130 00000588 [3C00000000000000]  <1>
  2131 00000590 488B00              <1>  mov rax, [rax]
  2132 00000593 4883C011            <1>  add rax, BIT_STRUC.Invert
  2133 00000597 FF10                <1>  call QWORD [rax]
  2134                                      adresbus.bit3.Get
  2135 00000599 48B8-               <1>  mov rax, %1
  2136 0000059B [3C00000000000000]  <1>
  2137 000005A3 488B00              <1>  mov rax, [rax]
  2138 000005A6 4883C019            <1>  add rax, BIT_STRUC.Get
  2139 000005AA FF10                <1>  call QWORD [rax]
  2140                                      adresbus.bit4.Load
  2141 000005AC 48B8-               <1>  mov rax, %1
  2142 000005AE [4400000000000000]  <1>
  2143 000005B6 488B00              <1>  mov rax, [rax]
  2144 000005B9 4883C021            <1>  add rax, BIT_STRUC.Load
  2145 000005BD FF10                <1>  call QWORD [rax]
  2146                                  
  2147                                      adresbus.bit4.Set
  2148 000005BF 48B8-               <1>  mov rax, %1
  2149 000005C1 [4400000000000000]  <1>
  2150 000005C9 488B00              <1>  mov rax, [rax]
  2151 000005CC 4883C001            <1>  add rax, BIT_STRUC.Set
  2152 000005D0 FF10                <1>  call [rax]
  2153                                      adresbus.bit4.Reset
  2154 000005D2 48B8-               <1>  mov rax, %1
  2155 000005D4 [4400000000000000]  <1>
  2156 000005DC 488B00              <1>  mov rax, [rax]
  2157 000005DF 4883C009            <1>  add rax, BIT_STRUC.Reset
  2158 000005E3 FF10                <1>  call QWORD [rax]
  2159                                      adresbus.bit4.Invert
  2160 000005E5 48B8-               <1>  mov rax, %1
  2161 000005E7 [4400000000000000]  <1>
  2162 000005EF 488B00              <1>  mov rax, [rax]
  2163 000005F2 4883C011            <1>  add rax, BIT_STRUC.Invert
  2164 000005F6 FF10                <1>  call QWORD [rax]
  2165                                      adresbus.bit4.Get
  2166 000005F8 48B8-               <1>  mov rax, %1
  2167 000005FA [4400000000000000]  <1>
  2168 00000602 488B00              <1>  mov rax, [rax]
  2169 00000605 4883C019            <1>  add rax, BIT_STRUC.Get
  2170 00000609 FF10                <1>  call QWORD [rax]
  2171                                      adresbus.bit5.Load
  2172 0000060B 48B8-               <1>  mov rax, %1
  2173 0000060D [4C00000000000000]  <1>
  2174 00000615 488B00              <1>  mov rax, [rax]
  2175 00000618 4883C021            <1>  add rax, BIT_STRUC.Load
  2176 0000061C FF10                <1>  call QWORD [rax]
  2177                                  
  2178                                      adresbus.bit5.Set
  2179 0000061E 48B8-               <1>  mov rax, %1
  2180 00000620 [4C00000000000000]  <1>
  2181 00000628 488B00              <1>  mov rax, [rax]
  2182 0000062B 4883C001            <1>  add rax, BIT_STRUC.Set
  2183 0000062F FF10                <1>  call [rax]
  2184                                      adresbus.bit5.Reset
  2185 00000631 48B8-               <1>  mov rax, %1
  2186 00000633 [4C00000000000000]  <1>
  2187 0000063B 488B00              <1>  mov rax, [rax]
  2188 0000063E 4883C009            <1>  add rax, BIT_STRUC.Reset
  2189 00000642 FF10                <1>  call QWORD [rax]
  2190                                      adresbus.bit5.Invert
  2191 00000644 48B8-               <1>  mov rax, %1
  2192 00000646 [4C00000000000000]  <1>
  2193 0000064E 488B00              <1>  mov rax, [rax]
  2194 00000651 4883C011            <1>  add rax, BIT_STRUC.Invert
  2195 00000655 FF10                <1>  call QWORD [rax]
  2196                                      adresbus.bit5.Get
  2197 00000657 48B8-               <1>  mov rax, %1
  2198 00000659 [4C00000000000000]  <1>
  2199 00000661 488B00              <1>  mov rax, [rax]
  2200 00000664 4883C019            <1>  add rax, BIT_STRUC.Get
  2201 00000668 FF10                <1>  call QWORD [rax]
  2202                                      adresbus.bit6.Load
  2203 0000066A 48B8-               <1>  mov rax, %1
  2204 0000066C [5400000000000000]  <1>
  2205 00000674 488B00              <1>  mov rax, [rax]
  2206 00000677 4883C021            <1>  add rax, BIT_STRUC.Load
  2207 0000067B FF10                <1>  call QWORD [rax]
  2208                                  
  2209                                      adresbus.bit6.Set
  2210 0000067D 48B8-               <1>  mov rax, %1
  2211 0000067F [5400000000000000]  <1>
  2212 00000687 488B00              <1>  mov rax, [rax]
  2213 0000068A 4883C001            <1>  add rax, BIT_STRUC.Set
  2214 0000068E FF10                <1>  call [rax]
  2215                                      adresbus.bit6.Reset
  2216 00000690 48B8-               <1>  mov rax, %1
  2217 00000692 [5400000000000000]  <1>
  2218 0000069A 488B00              <1>  mov rax, [rax]
  2219 0000069D 4883C009            <1>  add rax, BIT_STRUC.Reset
  2220 000006A1 FF10                <1>  call QWORD [rax]
  2221                                      adresbus.bit6.Invert
  2222 000006A3 48B8-               <1>  mov rax, %1
  2223 000006A5 [5400000000000000]  <1>
  2224 000006AD 488B00              <1>  mov rax, [rax]
  2225 000006B0 4883C011            <1>  add rax, BIT_STRUC.Invert
  2226 000006B4 FF10                <1>  call QWORD [rax]
  2227                                      adresbus.bit6.Get
  2228 000006B6 48B8-               <1>  mov rax, %1
  2229 000006B8 [5400000000000000]  <1>
  2230 000006C0 488B00              <1>  mov rax, [rax]
  2231 000006C3 4883C019            <1>  add rax, BIT_STRUC.Get
  2232 000006C7 FF10                <1>  call QWORD [rax]
  2233                                      adresbus.bit7.Load
  2234 000006C9 48B8-               <1>  mov rax, %1
  2235 000006CB [5C00000000000000]  <1>
  2236 000006D3 488B00              <1>  mov rax, [rax]
  2237 000006D6 4883C021            <1>  add rax, BIT_STRUC.Load
  2238 000006DA FF10                <1>  call QWORD [rax]
  2239                                  
  2240                                      adresbus.bit7.Set
  2241 000006DC 48B8-               <1>  mov rax, %1
  2242 000006DE [5C00000000000000]  <1>
  2243 000006E6 488B00              <1>  mov rax, [rax]
  2244 000006E9 4883C001            <1>  add rax, BIT_STRUC.Set
  2245 000006ED FF10                <1>  call [rax]
  2246                                      adresbus.bit7.Reset
  2247 000006EF 48B8-               <1>  mov rax, %1
  2248 000006F1 [5C00000000000000]  <1>
  2249 000006F9 488B00              <1>  mov rax, [rax]
  2250 000006FC 4883C009            <1>  add rax, BIT_STRUC.Reset
  2251 00000700 FF10                <1>  call QWORD [rax]
  2252                                      adresbus.bit7.Invert
  2253 00000702 48B8-               <1>  mov rax, %1
  2254 00000704 [5C00000000000000]  <1>
  2255 0000070C 488B00              <1>  mov rax, [rax]
  2256 0000070F 4883C011            <1>  add rax, BIT_STRUC.Invert
  2257 00000713 FF10                <1>  call QWORD [rax]
  2258                                      adresbus.bit0.Reset         ; to check bit0.Load
  2259 00000715 48B8-               <1>  mov rax, %1
  2260 00000717 [2400000000000000]  <1>
  2261 0000071F 488B00              <1>  mov rax, [rax]
  2262 00000722 4883C009            <1>  add rax, BIT_STRUC.Reset
  2263 00000726 FF10                <1>  call QWORD [rax]
  2264                                      adresbus.bit7.Get
  2265 00000728 48B8-               <1>  mov rax, %1
  2266 0000072A [5C00000000000000]  <1>
  2267 00000732 488B00              <1>  mov rax, [rax]
  2268 00000735 4883C019            <1>  add rax, BIT_STRUC.Get
  2269 00000739 FF10                <1>  call QWORD [rax]
  2270                                      adresbus.bit0.Load
  2271 0000073B 48B8-               <1>  mov rax, %1
  2272 0000073D [2400000000000000]  <1>
  2273 00000745 488B00              <1>  mov rax, [rax]
  2274 00000748 4883C021            <1>  add rax, BIT_STRUC.Load
  2275 0000074C FF10                <1>  call QWORD [rax]
  2276                                  
  2277                                      syscall.exit ENOERR
  2278                              <1> %if %1==0
  2279 0000074E 4831FF              <1>  xor rdi, rdi
  2280                              <1> %elif
  2281                              <1>  mov rdi, %2
  2282                              <1> %endif
  2283 00000751 B83C000000          <1>  mov rax, SYS_EXIT
  2284 00000756 0F05                <1>  syscall
  2285                                  
  2286                                  OnBit0Set:
  2287 00000758 B230                        mov     dl, "0"
  2288 0000075A EB1A                        jmp     displaymessageset
  2289                                  OnBit1Set:
  2290 0000075C B231                        mov     dl, "1"
  2291 0000075E EB16                        jmp     displaymessageset
  2292                                  OnBit2Set:
  2293 00000760 B232                        mov     dl, "2"
  2294 00000762 EB12                        jmp     displaymessageset
  2295                                  OnBit3Set:
  2296 00000764 B233                        mov     dl, "3"
  2297 00000766 EB0E                        jmp     displaymessageset
  2298                                  OnBit4Set:
  2299 00000768 B234                        mov     dl, "4"
  2300 0000076A EB0A                        jmp     displaymessageset
  2301                                  OnBit5Set:
  2302 0000076C B235                        mov     dl, "5"
  2303 0000076E EB06                        jmp     displaymessageset
  2304                                  OnBit6Set:
  2305 00000770 B236                        mov     dl, "6"
  2306 00000772 EB02                        jmp     displaymessageset
  2307                                  OnBit7Set:
  2308 00000774 B237                        mov     dl, "7"
  2309                                  displaymessageset:
  2310 00000776 68[11000000]                push    messageSet
  2311 0000077B 6A04                        push    messageSet.length
  2312 0000077D 52                          push    rdx
  2313 0000077E EB50                        jmp     displaymessage
  2314                                            
  2315                                  OnBit0Reset:
  2316 00000780 B230                        mov     dl, "0"
  2317 00000782 EB1A                        jmp     displaymessagereset
  2318                                  OnBit1Reset:
  2319 00000784 B231                        mov     dl, "1"
  2320 00000786 EB16                        jmp     displaymessagereset
  2321                                  OnBit2Reset:
  2322 00000788 B232                        mov     dl, "2"
  2323 0000078A EB12                        jmp     displaymessagereset
  2324                                  OnBit3Reset:
  2325 0000078C B233                        mov     dl, "3"
  2326 0000078E EB0E                        jmp     displaymessagereset
  2327                                  OnBit4Reset:
  2328 00000790 B234                        mov     dl, "4"
  2329 00000792 EB0A                        jmp     displaymessagereset
  2330                                  OnBit5Reset:
  2331 00000794 B235                        mov     dl, "5"
  2332 00000796 EB06                        jmp     displaymessagereset
  2333                                  OnBit6Reset:
  2334 00000798 B236                        mov     dl, "6"
  2335 0000079A EB02                        jmp     displaymessagereset
  2336                                  OnBit7Reset:
  2337 0000079C B237                        mov     dl, "7"
  2338                                  displaymessagereset:
  2339 0000079E 68[15000000]                push    messageReset
  2340 000007A3 6A06                        push    messageReset.length
  2341 000007A5 52                          push    rdx
  2342 000007A6 EB28                        jmp     displaymessage
  2343                                      
  2344                                  OnBit0Changed:
  2345 000007A8 B230                        mov     dl, "0"
  2346 000007AA EB1C                        jmp    displaymessagechanged
  2347                                  OnBit1Changed:
  2348 000007AC B231                        mov     dl, "1"
  2349 000007AE EB18                        jmp    displaymessagechanged
  2350                                  OnBit2Changed:
  2351 000007B0 B232                        mov     dl, "2"
  2352 000007B2 EB14                        jmp    displaymessagechanged
  2353                                  OnBit3Changed:
  2354 000007B4 B233                        mov     dl, "3"
  2355 000007B6 EB10                        jmp    displaymessagechanged
  2356                                  OnBit4Changed:
  2357 000007B8 B234                        mov     dl, "4"
  2358 000007BA EB0C                        jmp    displaymessagechanged
  2359                                  OnBit5Changed:
  2360 000007BC B235                        mov     dl, "5"
  2361 000007BE EB08                        jmp    displaymessagechanged
  2362                                  OnBit6Changed:
  2363 000007C0 B236                        mov     dl, "6"
  2364 000007C2 EB04                        jmp    displaymessagechanged
  2365                                  OnBit7Changed:
  2366 000007C4 B237                        mov     dl, "7"
  2367 000007C6 EB00                        jmp    displaymessagechanged
  2368                                  displaymessagechanged:
  2369 000007C8 68[1B000000]                push    messageChanged
  2370 000007CD 6A09                        push    messageChanged.length
  2371 000007CF 52                          push    rdx
  2372                                      
  2373                                  displaymessage:
  2374 000007D0 5A                          pop     rdx                     ; get bit number
  2375 000007D1 48BE-                       mov     rsi, message
  2376 000007D3 [0000000000000000] 
  2377 000007DB 88560C                      mov     BYTE [rsi+12], dl       ; put bitnumber in place
  2378 000007DE BA11000000                  mov     rdx, message.length
  2379 000007E3 BF01000000                  mov     rdi, STDOUT
  2380 000007E8 B801000000                  mov     rax, SYS_WRITE
  2381 000007ED 0F05                        syscall
  2382 000007EF 5A                          pop     rdx                     ; get length message
  2383 000007F0 5E                          pop     rsi                     ; get address message         
  2384 000007F1 BF01000000                  mov     rdi, STDOUT
  2385 000007F6 B801000000                  mov     rax, SYS_WRITE
  2386 000007FB 0F05                        syscall
  2387 000007FD C3                          ret
